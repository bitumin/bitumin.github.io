<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MitxelMoriana</title>
    <description>Hi there. I&#39;m Mitxel Moriana, developer, technophile, entrepeneur and blogger. This is the blog I use to talk about my work as a developer, so you can expect to find many programming related posts that I hope you&#39;ll find useful!
</description>
    <link>http://mitxelmoriana.com/</link>
    <atom:link href="http://mitxelmoriana.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 05 Jan 2016 02:41:40 +0100</pubDate>
    <lastBuildDate>Tue, 05 Jan 2016 02:41:40 +0100</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Tu web porno con Laravel - I: Introducción y planificación</title>
        <description>&lt;h2 id=&quot;no-slo-de-porno-vive-el-internauta&quot;&gt;No sólo de porno vive el internauta&lt;/h2&gt;

&lt;p&gt;El objetivo de este pequeño curso de Laravel es mostrar cómo de bien y rápido se puede realizar el back end (lo que no se ve) de una web no del todo estándar: un negocio web de vídeos porno ¡con su área de suscriptores y todo!&lt;/p&gt;

&lt;p&gt;¡Pero no todo es porno en internet! En realidad este curso es aplicable a la creación de cualquier tipo de web que ofrezca contenidos mediante suscripción (texto, fotografía, música…), asímismo si ya sabes algo de Laravel quizá te puedan servir algunas partes del curso para profundizar en algunos aspectos del framework que desconocías.&lt;/p&gt;

&lt;h2 id=&quot;qu-habremos-conseguido-al-finalizar-el-curso&quot;&gt;¿Qué habremos conseguido al finalizar el curso?&lt;/h2&gt;

&lt;p&gt;Al finalizar el curso tendrás terminado todo el back end necesario para el funcionamiento de una página que sirve contenido audiovisual a suscriptores. Además, haremos lo justo y necesario del front end para hacernos una idea de cómo se verá la web, pero no profundizaremos en este aspecto: el diseño gráfico y los contenidos no formarán parte del curso.&lt;/p&gt;

&lt;h2 id=&quot;a-quin-va-dirigido-el-curso&quot;&gt;¿A quién va dirigido el curso?&lt;/h2&gt;

&lt;p&gt;A cualquier persona que tenga conocimientos básicos de desarrollo web. Es necesario tener un entorno de desarrollo adecuado: un servidor web (por ej. Apache o Nginx), PHP y base de datos (por ej. MySQL). También es necesario saber instalar y tener preparada una nueva copia de Laravel. Si nunca has usado Laravel te invito a que sigas los pasos de la web oficial para su instalación &lt;a href=&quot;https://laravel.com/docs/5.2/installation&quot;&gt;aquí&lt;/a&gt;. Si durante la instalación de Laravel o durante el seguimiento del curso te surgen dudas o detectas errores, házmelo saber más abajo, en el área de comentarios.&lt;/p&gt;

&lt;h2 id=&quot;qu-aspectos-de-laravel-voy-a-tratar-durante-el-desarrollo&quot;&gt;¿Qué aspectos de Laravel voy a tratar durante el desarrollo?&lt;/h2&gt;

&lt;p&gt;De casi todo un poco. Si no sabes nada de Laravel esto que diré a continuación te sonará a chino, pero no te desanimes, es muy posible seguir el curso sin saber nada sobre Laravel. Ofrezco este pequeño listado para aquellos ya iniciados que quieran saber si este curso tocará algún asunto que pudiera interesarles.&lt;/p&gt;

&lt;p&gt;Durante el curso tocaremos los siguientes aspectos del framework:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Routes, controllers y RestFUL resource controllers&lt;/li&gt;
  &lt;li&gt;Creación de models y relaciones entre models&lt;/li&gt;
  &lt;li&gt;Uso de eloquent en los models y controllers&lt;/li&gt;
  &lt;li&gt;Uso de authentication para el login y registro&lt;/li&gt;
  &lt;li&gt;Manejo de datos introducidos por el usuario: Validation, Requests…&lt;/li&gt;
  &lt;li&gt;Creación de migrations y seeders para preparar la base de datos&lt;/li&gt;
  &lt;li&gt;Layouts, views y blade templates para el front end&lt;/li&gt;
  &lt;li&gt;Lang para hacer nuestra web multilingual&lt;/li&gt;
  &lt;li&gt;Extensiones de Requests para hacer validaciones repetitivas&lt;/li&gt;
  &lt;li&gt;Middleware para gestionar Requests bajo ciertas condiciones&lt;/li&gt;
  &lt;li&gt;Integrar una pasarela bancaria para realizar pagos en línea&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como (casi) ninguna persona se suscribiría a una página porno utilizando su cuenta de las redes sociales, no será necesario integrar un sistema de registro/login social, de hecho, para mayor seguridad y privacidad de nuestros usuarios el único dato personal que pediremos y almacenaremos será el e-mail. Nosotros mismos generaremos un nombre de usuario y contraseña para cada suscriptor.&lt;/p&gt;

&lt;h2 id=&quot;manos-a-la-obra-planificar-el-proyecto&quot;&gt;Manos a la obra: planificar el proyecto&lt;/h2&gt;

&lt;p&gt;Antes de comenzar cualquier proyecto web de cierta envergadura es necesario tener una idea bastante clara de qué páginas y funcionalidades va a disponer, porque de ello dependerá todo nuestro trabajo. Así pues, nos ponemos manos a la obra y nos preguntamos: ¿cómo será y qué páginas tendrá nuestra web de contenido pornográfico?&lt;/p&gt;

&lt;h3 id=&quot;rea-de-no-miembros-non-members-area&quot;&gt;Área de no miembros (non members area)&lt;/h3&gt;

&lt;p&gt;Ésta será el área destinada a crear interés y captar suscriptores. Para ello ofreceremos enlaces a páginas con vídeos cortos (como trailers de película) que dan una visión previa de lo que podrá encontrar el usuario si se suscribe. A bote pronto necesitaremos las siguientes páginas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Home page with latest video trailers, featured trailers and index of girls&lt;/li&gt;
  &lt;li&gt;Girl page with some teaser pictures, information and links to the related trailers&lt;/li&gt;
  &lt;li&gt;Register/buy a subscription plan page&lt;/li&gt;
  &lt;li&gt;Members login page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todas estas páginas tendrán una cabecera (header) y un pie de página (footer) en común.&lt;/p&gt;

&lt;h3 id=&quot;rea-de-miembrossuscriptores-members-area&quot;&gt;Área de miembros/suscriptores (members area)&lt;/h3&gt;

&lt;p&gt;En esta área, para usuarios ya suscritos, tenemos que ofrecer fácil acceso a todo nuestro contenido audiovisual. En la página inicial deberá aparecer siempre el contenido más nuevo, pero debemos ofrecer también una forma ágil de navegar entre el contenido más viejo, por tanto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Members home page with latest video additions, featured videos, latest girls and index of girls&lt;/li&gt;
  &lt;li&gt;Full video page (visualization and download options)&lt;/li&gt;
  &lt;li&gt;Girl page with the links to her related videos&lt;/li&gt;
  &lt;li&gt;Account management page for password change, subscription plan change, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estas páginas tendrán una cabecera y un pie de página en común, pero diferentes a las del área de no miembros.&lt;/p&gt;

&lt;h3 id=&quot;rea-de-administrador-de-contenidos&quot;&gt;Área de administrador de contenidos&lt;/h3&gt;

&lt;p&gt;Esta será el área que usará el dueño de la web, es decir, el productor pornográfico, para gestionar los contenidos (subir vídeos e información sobre nuevas modelos), así como para gestionar a los usuarios (ver usuarios suscritos). También se podría ampliar el panel de control con feedback sobre vídeos/modelos más vistos, ingresos periódicos, etc.&lt;/p&gt;

&lt;p&gt;Por tanto, necesitaremos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Página de login para el área de administrador&lt;/li&gt;
  &lt;li&gt;Panel de control con enlaces al resto de áreas y con datos de interés sobre el estado de la web&lt;/li&gt;
  &lt;li&gt;Índice de vídeos con acciones para sus datos: nuevo, editar, eliminar&lt;/li&gt;
  &lt;li&gt;Índice de modelos con acciones para sus datos: nueva, editar, eliminar&lt;/li&gt;
  &lt;li&gt;Índice de usuarios con información sobre el estado de cada suscripción&lt;/li&gt;
  &lt;li&gt;Página de nuevo/editar datos de vídeo&lt;/li&gt;
  &lt;li&gt;Página de nuevo/editar datos de modelo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todas estas páginas tendrán en común el mismo aspecto de área de administración o panel de control.&lt;/p&gt;

&lt;h2 id=&quot;siguiente-paso&quot;&gt;Siguiente paso…&lt;/h2&gt;

&lt;p&gt;Una vez planificado el proyecto ya podemos darle vueltas a cuestiones más técnicas y prácticas. En el próximo post hablaré sobre cómo diseñar la base de datos teniendo en cuenta nuestra planificación y, una vez diseñada, cómo crear las tablas y sus relaciones mediante Laravel.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;Próximamente en tu blog favorito…&lt;/strong&gt;&lt;br /&gt;
Tu web porno con Laravel - II: Migrations, models y seeders&lt;/p&gt;

</description>
        <pubDate>Mon, 04 Jan 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/web/2016/01/04/crea-tu-propia-web-porno.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/web/2016/01/04/crea-tu-propia-web-porno.html</guid>
        
        <category>web,</category>
        
        <category>desarrollo</category>
        
        <category>web</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>Estrategias de desarrollo web</title>
        <description>&lt;h2 id=&quot;breve-introduccin&quot;&gt;Breve introducción&lt;/h2&gt;
&lt;p&gt;Cualquier desarrollador web estará de acuerdo conmigo en que elegir la tecnología apropiada a la magnitud, complejidad y características de cada proyecto es de una importancia difícil de sobrevalorar. Además, es lo primero que debe hacerse  incluso antes de comenzar a trabajar en un proyecto. Por eso, he decidido estrenar mi blog comenzando por el principio, es decir, hablando sobre estrategias de desarrollo web.&lt;/p&gt;

&lt;h2 id=&quot;wordpress-y-todo-lo-dems&quot;&gt;WordPress y todo lo demás&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://wordpress.org/download/&quot;&gt;WordPress&lt;/a&gt;&lt;/strong&gt; es muy útil para crear blogs con docenas de funcionalidades. Si además le instalas &lt;strong&gt;&lt;a href=&quot;https://www.woothemes.com/woocommerce/&quot;&gt;woocommerce&lt;/a&gt;&lt;/strong&gt; o plugins similares también puedes hacer tiendas on-line más que decentes. En mi opinión, hay que reconocer que la versatilidad y sencillez de Wordpress deja poco espacio para cualquier otra plataforma de desarrollo web salvo en dos casos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Desarrollo de grandes sitios o aplicaciones web con bases de datos enormes o muy personalizadas&lt;/li&gt;
  &lt;li&gt;Desarrollo de pequeñas webs o blogs con contenido principalmente estático&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;apps-complejas-y-personalizadas&quot;&gt;Apps complejas y personalizadas&lt;/h2&gt;
&lt;p&gt;Si, por ejemplo, uno desea desarrollar una app social, un nuevo facebook, un nuevo twitter, etc., donde el back end (lo que no se ve) nos va a llevar muchas semanas de desarrollo, lo más apropiado es utilizar un &lt;strong&gt;framework&lt;/strong&gt;, cuya raison d’être es, precisamente, ayudarnos a escribir el menor número de líneas de código posible para realizar el mayor número de tareas posible (consultas a base de datos, validación de datos, servir páginas, enviar correos…).&lt;/p&gt;

&lt;p&gt;En estos casos yo recomiendo utilizar &lt;strong&gt;&lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt;&lt;/strong&gt; si uno está familiarizado con PHP, o &lt;strong&gt;&lt;a href=&quot;http://www.rubyonrails.org.es/&quot;&gt;Ruby on Rails&lt;/a&gt;&lt;/strong&gt; (aka RoR) si uno prefiere Ruby. Aunque yo soy un fan confeso de Laravel, me consta que los dos frameworks tienen una comunidad de desarrolladores enorme, es decir: los dos tienen muy buen soporte y montones de repositorios que nos vendrán que ni pintados.&lt;/p&gt;

&lt;h2 id=&quot;blogs-sencillos-pginas-corporativas&quot;&gt;Blogs sencillos, páginas corporativas…&lt;/h2&gt;
&lt;p&gt;Si, por otro lado, uno desea hacerse un blog personal o una pequeña página corporativa o, en general, cualquier web con contenido principalmente estático, a mi parecer, tiene tres opciones:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;La primera opción es usar &lt;strong&gt;WordPress&lt;/strong&gt;, en cuyo caso podrá customizar el aspecto y editar nuevos contenidos a una velocidad muy razonable. Por contra, los contenidos se servirán bastante lentamente en relación al poco peso que en realidad tienen y WordPress en sí consumirá muchos más recursos del servidor de los estrictamente necesarios, lo cual hay que tener en cuenta si nuestro cliente o nosotros mismos pagamos un hosting a razón de los servicios que ofrece (PHP, SQL) o los recursos que consume (CPU, espacio).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La segunda opción, óptima para webs-anuncios, landing pages o pequeñas webs corporativas con 2-5 páginas distintas, es sencillamente editar a pelo algún template html/css/js existente. Al respecto, los templates basados en &lt;strong&gt;&lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;&lt;/strong&gt; y similares son ideales: fáciles de entender, responsive, cross-browser…&lt;/p&gt;

    &lt;p&gt;El desarrollo de proyectos bajo este enfoque tan sólo nos debería llevar 1-2 jornadas de trabajo, incluyendo la optimización de la velocidad de carga y el SEO. El resultado debería ser una web extremadamente optimizada y que consumirá menos recursos que un mechero.&lt;/p&gt;

    &lt;p&gt;La única pega de esta estrategia es que agregar una nueva página no supondrá ningún ahorro de tiempo respecto a la anterior. Por tanto, si hubiese que hacer muchas páginas o si quisiéramos ciertas funcionalidades complejas (de blog, de e-shop…), esta estrategia no sería la más adecuada.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La tercera y última opción es utilizar &lt;strong&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/strong&gt;, una especie de intérprete/generador de webs de contenido estático, al que sólo hay que pasarle el contenido de cada página convenientemente estructurado (markdown). Jekyll genera y actualiza (incluso en tiempo real) la totalidad de nuestro sitio web conforme uno lo escribe en cualquier editor de texto o IDE favorito.&lt;/p&gt;

    &lt;p&gt;Los sitios así generados no requieren del propio Jekyll para ser servidos, con lo cual en nuestro entorno de producción no es necesario tener bases de datos, ni Ruby, ni PHP… lo que implica un consumo de recursos mínimo, con el consiguiente ahorro de dinerito.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;en-resumen&quot;&gt;En resumen&lt;/h2&gt;

&lt;p&gt;Sin olvidar las respectivas ventajas/desventajas comentadas más arriba la cosa quedaría tal que así:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Type of project vs Technology&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Framework&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;WordPress&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Jekyll&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Template&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Simple site, static content&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;***&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;**&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Standard site&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;***&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Complex web app&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;***&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;dudas-sugerencias&quot;&gt;Dudas, sugerencias…&lt;/h2&gt;
&lt;p&gt;Estoy seguro que me dejo un montón de tecnologías aplicable a tipologías de proyectos muy variadas. A bote pronto me vienen a la mente la gran cantidad de content managers que existen para montar portales, e-shops o blogs. ¡Te animo a que me sugieras todos los que tú conoces y consideres excepcionalmente buenos!&lt;/p&gt;

&lt;p&gt;En cualquier caso, espero que este par de pinceladas sobre estrategias de desarrollo web resulte útil a aquellos que comienzan. Si tienes algunda duda, no dudes en preguntar.&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Jan 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/web/2016/01/02/estrategias-de-desarrollo-web.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/web/2016/01/02/estrategias-de-desarrollo-web.html</guid>
        
        <category>web,</category>
        
        <category>desarrollo</category>
        
        <category>web</category>
        
        
        <category>web</category>
        
      </item>
    
  </channel>
</rss>
