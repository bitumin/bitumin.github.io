<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MitxelMoriana</title>
    <description>Huola. Soy Mitxel, desarrollador y tecnófilo. En este blog hablo sobre asuntos relacionados con mi trabajo, así que encontrarás posts relacionados con nuevas tecnologías de la información y el arte de programar software para resolver problemas. ¡Espero que encuentres mis posts instructivos e inspiradores!
</description>
    <link>http://mitxelmoriana.com/</link>
    <atom:link href="http://mitxelmoriana.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 19 Aug 2019 22:42:34 +0200</pubDate>
    <lastBuildDate>Mon, 19 Aug 2019 22:42:34 +0200</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>Data structures I</title>
        <description>&lt;h2 id=&quot;introducción-a-las-estructuras-de-datos&quot;&gt;Introducción a las estructuras de datos&lt;/h2&gt;

&lt;p&gt;Los problemas más sencillos en programación a menudo se resuelven con sencillas operaciones
aritméticas (contadores, multiplicación, división, módulos, etc.)
sobre tipos de datos fundamentales como &lt;code&gt;int&lt;/code&gt; o &lt;code&gt;float&lt;/code&gt;, pero a medida que los problemas se vuelven más complejos
y tenemos la necesidad de guardar los datos y sus relaciones en memoria para operar 
con ellos de la forma más eficiente posible, surge la necesidad de utilizar estructuras de datos.&lt;/p&gt;

&lt;p&gt;Empecemos por revisar el &lt;em&gt;array&lt;/em&gt; y su implementación en mis dos lenguajes favoritos: JS y PHP.&lt;/p&gt;

&lt;h2 id=&quot;algunas-curiosidades-sobre-js-y-php&quot;&gt;Algunas curiosidades sobre JS y PHP&lt;/h2&gt;

&lt;p&gt;Debido a las particularidades del lenguaje JS
las estructuras de datos y su implementación están estrechamente relacionadas con los &lt;em&gt;objects&lt;/em&gt;,
básicamente porque que todas las estructuras de datos no primitivas en JS son, en el fondo, &lt;em&gt;objects&lt;/em&gt; 
(de ahí el adagio &lt;em&gt;“Everything is an object in JavaScript”&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;En cuanto a PHP, su principal particularidad es que buena parte de las estructuras de datos se pueden
implementar a partir del &lt;code&gt;array&lt;/code&gt;. Según la propia documentación, a partir del &lt;code&gt;array&lt;/code&gt; se pueden implementar
las estructuras &lt;em&gt;“list (vector), hash table (an implementation of a map), dictionary, collection,
stack, queue, and probably more”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;En PHP5 se ofrecían algunas alternativas al &lt;code&gt;array&lt;/code&gt; a través de la librería estándar &lt;code&gt;SPL&lt;/code&gt;, pero a partir de PHP7
la solución más eficiente en casi todos los casos es el &lt;code&gt;array&lt;/code&gt; o bien las estructuras de datos que ofrece la librería &lt;code&gt;ds&lt;/code&gt;
(al respecto, ver &lt;a href=&quot;https://medium.com/@rtheunissen/efficient-data-structures-for-php-7-9dda7af674cd&quot;&gt;Efficient data structures for PHP 7&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;En resumen, debido a las diferencias a bajo nivel de cada lenguaje, pueden existen
diferencias entre la definición y comportamiento teóricos de una estructura de datos particular
y su comportamiento real entre distintas versiones de JS o PHP y sus intérpretes.&lt;/p&gt;

&lt;h2 id=&quot;el-array-ideal&quot;&gt;El &lt;em&gt;array&lt;/em&gt; ideal&lt;/h2&gt;

&lt;p&gt;Un &lt;em&gt;array&lt;/em&gt; es una colección lineal de elementos a los que se puede acceder a través de un índice o &lt;em&gt;key&lt;/em&gt;,
estos elementos pueden tener valores repetidos y sin ningún orden en particular.&lt;/p&gt;

&lt;p&gt;Típicamente a cada índice se le asigna una dirección u &lt;em&gt;offset&lt;/em&gt; en memoria de forma que los elementos tienen direcciones consecutivas,
por ello sólo es necesario guardar la dirección del primero como referencia para localizar al resto. Debido a esto,
&lt;strong&gt;leer&lt;/strong&gt; el valor relacionado con un índice particular en un &lt;em&gt;array&lt;/em&gt; es una operación sencilla y rápida (&lt;em&gt;O(1)&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Buscar&lt;/strong&gt; un elemento dado en un &lt;em&gt;array&lt;/em&gt;, en cambio, requiere de recorrer todos los índices y comprobar cada uno de los elementos en cada índice
hasta dar con el elemento buscado (o informar de que no aparece), por lo que la búsqueda en un &lt;em&gt;array&lt;/em&gt; es una operación menos eficiente que la lectura
(&lt;em&gt;O(n)&lt;/em&gt; en el peor caso).&lt;/p&gt;

&lt;p&gt;La &lt;strong&gt;inserción&lt;/strong&gt; y &lt;strong&gt;eliminación&lt;/strong&gt; de elementos en el &lt;em&gt;array&lt;/em&gt; también implican complejidades del orden de &lt;em&gt;O(n)&lt;/em&gt;
puesto que implican, en el peor caso, reindexar todo el resto de elementos del &lt;em&gt;array&lt;/em&gt; después de la inserción
o eliminación de un elemento al principio del &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;implementación-del-array-en-js-sobre-v8&quot;&gt;Implementación del &lt;em&gt;array&lt;/em&gt; en JS sobre V8&lt;/h2&gt;

&lt;p&gt;En JS sobre el motor V8 (chrome, Node…) los &lt;code&gt;Array&lt;/code&gt; son &lt;em&gt;“list-like object”&lt;/em&gt; que, al igual que cualquier
otro &lt;code&gt;Object&lt;/code&gt; puede contener propiedades (named properties) y elementos (integer-indexed elements) y que,
por debajo, se comportan de distinto modo según lo que les metamos dentro.&lt;/p&gt;

&lt;p&gt;Si limitamos nuestro &lt;code&gt;Array&lt;/code&gt; a contener elementos indexados por &lt;em&gt;integers&lt;/em&gt; contiguos el &lt;code&gt;Array&lt;/code&gt; se
comportará aproximadamente como un &lt;em&gt;array&lt;/em&gt; ideal, porque a nivel de la máquina virtual, de hecho,
se empleará un &lt;em&gt;array&lt;/em&gt; para indexar y acceder a nuestros elementos.&lt;/p&gt;

&lt;p&gt;Debido a esta peculiaridad del &lt;code&gt;Array&lt;/code&gt; como &lt;code&gt;Object&lt;/code&gt; en JS sobre V8, se pueden hacer cosas tan curiosas como éstas:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let fruits = ['Apple', 'Banana'];
fruits.length; // 2

fruits['hello'] = 'Eggplant';
fruits.length; // 2 (!) 

let hi = {toString: () =&amp;gt; 'hello'};
fruits[hi]; // 'Eggplant' (!)

fruits[-1] = 'Tomato';
fruits.length; // 2 (!)

fruits[18] = 'Orange';
fruits.length; // 19 (!)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puedes encontrar info más detallada sobre la gestión a bajo nivel de las propiedades y elementos de un &lt;code&gt;Object&lt;/code&gt; en JS sobre V8
&lt;a href=&quot;https://v8.dev/blog/fast-properties&quot;&gt;aquí&lt;/a&gt; y &lt;a href=&quot;https://www.jayconrod.com/posts/52/a-tour-of-v8-object-representation&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;implementación-del-array-en-php7-sobre-zend-engine&quot;&gt;Implementación del &lt;em&gt;array&lt;/em&gt; en PHP7 sobre Zend Engine&lt;/h2&gt;

&lt;p&gt;Al igual que en JS sobre V8, en PHP sobre Zend el &lt;code&gt;array&lt;/code&gt; es una construcción muy flexible, es decir, a partir de la cual
se pueden construir diversas estructuras de datos y no sólo &lt;em&gt;arrays&lt;/em&gt; “ideales”.&lt;/p&gt;

&lt;p&gt;Para hacer posible esta flexibilidad, en PHP todos los &lt;code&gt;array&lt;/code&gt; son, por debajo, “ordered maps” u “ordered dictionaries”, 
es decir, pares &lt;em&gt;key-value&lt;/em&gt; cuyo orden de inserción en el &lt;code&gt;array&lt;/code&gt; se mantiene representado en memoria.&lt;/p&gt;

&lt;p&gt;En PHP7, mientras utilicemos el &lt;em&gt;array&lt;/em&gt; para almacenar &lt;em&gt;integer-indexed elements&lt;/em&gt; en orden ascendente
el &lt;code&gt;array&lt;/code&gt; se comportará aproximadamente como un &lt;em&gt;array&lt;/em&gt; ideal, porque a bajo nivel se utiliza un &lt;em&gt;array&lt;/em&gt; real
para leer/encontrar los datos almacenados a través de su índice y offset en memoria.&lt;/p&gt;

&lt;p&gt;Sin embargo, si utilizamos el &lt;code&gt;array&lt;/code&gt; para construir un &lt;em&gt;array&lt;/em&gt; asociativo, “por debajo” se empleará una función de hashing
para asignar y recuperar el índice numérico de cada named property (y entrará en funcionamiento un algoritmo para evitar colisiones),
con lo que el &lt;code&gt;array&lt;/code&gt; real con el que estamos trabajando perderá la eficiencia computacional característica del &lt;em&gt;array&lt;/em&gt; “puro”.&lt;/p&gt;

&lt;p&gt;Al respecto de PHP7 y sus optimizaciones en la implementación del &lt;em&gt;array&lt;/em&gt; respecto a PHP5 sobre Zend Engine
puedes encontrar info detallada &lt;a href=&quot;https://nikic.github.io/2014/12/22/PHPs-new-hashtable-implementation.html&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Sep 2017 00:00:00 +0200</pubDate>
        <link>http://mitxelmoriana.com/data-structures/2017/09/24/data-structures-en-js-y-php.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/data-structures/2017/09/24/data-structures-en-js-y-php.html</guid>
        
        <category>data</category>
        
        <category>structures,</category>
        
        <category>js,</category>
        
        <category>es6,</category>
        
        <category>v8,</category>
        
        <category>node,</category>
        
        <category>chrome,</category>
        
        <category>chromium,</category>
        
        <category>php,</category>
        
        <category>php7,</category>
        
        <category>zend,</category>
        
        <category>zend</category>
        
        <category>engine,</category>
        
        <category>ds,</category>
        
        <category>array,</category>
        
        <category>objects</category>
        
        
        <category>data-structures</category>
        
      </item>
    
      <item>
        <title>Machine learning desde cero III</title>
        <description>&lt;h2 id=&quot;repasito-sobre-la-regresión&quot;&gt;Repasito sobre la regresión&lt;/h2&gt;

&lt;p&gt;En los posts anteriores vimos cómo es posible predecir ciertos valores “de salida” a partir de ciertos valores
“de entrada” a través de descubrir tendencias (rectas, planos, hiperplanos… con cierta pendiente)
en observaciones anteriores.&lt;/p&gt;

&lt;p&gt;A este cálculo de una posible tendencia lineal lo llamamos regresión lineal y vimos, de pasada, que es posible
ajustar no sólo formas geométricas lineales sino también curvas (este tema lo trataremos en profundidad en futuros
posts).&lt;/p&gt;

&lt;p&gt;Desde el punto de vista del Machine Learning, puesto que la obtención o ajuste del patrón, modelo o tendencia se hace a partir
de una familia de datos de entrenamiento en que los valores de salida son conocidos, la regresión lineal entra dentro de
la familia de algoritmos de aprendizaje &lt;strong&gt;supervisado&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;En este posts vamos a introducir otro de los algoritmos fundamentales de aprendizaje supervisado: el de la clasificación
lineal.&lt;/p&gt;

&lt;h2 id=&quot;la-clasificación&quot;&gt;La clasificación&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;εκστα ση… εκστα νο…&lt;br /&gt;
&lt;small&gt;Chimo Bayo&lt;/small&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En la regresión nuestro objetivo era predecir una variable respuesta en forma de de número real a partir de ciertas observaciones,
por ejemplo, podíamos predecir precios de bienes inmuebles. En la clasificación, en cambio,
nuestro objetivo es predecir un valor discreto, o dicho de otro modo, clasificar observaciones en categorías
distintas: animal o vegetal, enfermo o sano, etc.&lt;/p&gt;

&lt;p&gt;Las aplicaciones de la clasificación son muchas y muy útiles, entre las más conocidas están, por ejemplo,
el filtro de spam (clasificar emails como spam o no spam) o la resolución de problemas de &lt;em&gt;computer vision&lt;/em&gt;
como el análisis de emociones (clasificar caras como triste, feliz…).&lt;/p&gt;

&lt;h2 id=&quot;la-clasificación-lineal&quot;&gt;La clasificación lineal&lt;/h2&gt;

&lt;p&gt;Vamos a empezar por la clasificación lineal binaria, es decir, donde la variable respuesta que queremos predecir
sólo puede tener dos categorías posibles (por ejemplo: spam o no spam, enfermo o sano, etc.). Aunque existen diversos algoritmos
para tratar de delimitar linealmente las categorías “de respuesta”, en este post vamos a empezar usando el de la regresión logística.&lt;/p&gt;

&lt;p&gt;Como veremos, la función objetivo a optimizar en la clasificación lineal como problema de regresión logística
no tendrá una solución “en forma cerrada” (closed-form solution) o, dicho de otro modo,
que no vamos a poder encontrar una solución en forma de fórmula matemática con operaciones “sencillas”.
Esta dificultad nos va a permitir introducir un algoritmo de búsqueda de soluciones de forma iterativa que, de hecho,
aplicaremos a la resolución de muchos otros problemas de optimización que surgen en machine learning,
incluyendo también el de la regresión lineal de los &lt;em&gt;posts&lt;/em&gt; anteriores.&lt;/p&gt;

&lt;p&gt;Empecemos por presentar una serie de datos de ejemplo en que se ha observado si una serie de pacientes presentaban
o no presentaban una enfermedad cardíaca y la edad y frecuencia cardíaca máxima de cada paciente como variables predictoras
(voy a utilizar un dataset con más de 300 observaciones, de las cuales voy a emplear 212 como dataset de entrenamiento):&lt;/p&gt;

&lt;table class=&quot;table table-sm&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Edad&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Frecuencia cardíaca máxima&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Enfermo&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;54&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;109&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;66&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;165&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;54&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;160&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;41&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;179&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;53&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;173&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;120&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;54&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;116&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;54&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;195&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;67&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;71&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;44&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;175&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;41&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;153&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;48&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;175&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nuestro objetivo es construir un modelo predictivo de tal forma que podamos clasificar con cierta fiabilidad
si un nuevo paciente está sano o enfermo a partir de su edad (que podemos preguntar) y su frecuencia cardíaca máxima
(que podemos medir). Hasta aquí vemos que el planteamiento es muy similar al de la regresión como predicción.&lt;/p&gt;

&lt;p&gt;Una forma habitual de presentar gráficamente el problema de la clasificación lineal es a través de una nube
de puntos sobre un plano en que los dos ejes cartesianos representarán nuestras variables predictivas
(en nuestro ejemplo la &lt;code&gt;Edad&lt;/code&gt; la pondremos en el horizontal y la &lt;code&gt;Frecuencia cardíaca máxima&lt;/code&gt; en el vertical)
y un color o forma distintos para cada punto que represente nuestra variable “objetivo” a predecir
(para la categoría &lt;code&gt;Enfermo&lt;/code&gt; usaré el color rojo y para la categoría &lt;code&gt;Sano&lt;/code&gt; utilizaré el azul):&lt;/p&gt;

&lt;div id=&quot;pointscloud&quot; class=&quot;jxgbox&quot; style=&quot;width:400px; height:400px;&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
let healthy = [[54, 109],[66, 165],[46, 120],[54, 116],[54, 195],[67, 71],[60, 144],[48, 150],[70, 109],[59, 162],[60, 141],[35, 130],[68, 141],[55, 130],[67, 150],[61, 161],[52, 161],[39, 140],[52, 168],[53, 95],[64, 158],[58, 130],[63, 144],[50, 128],[63, 147],[59, 140],[49, 126],[62, 154],[59, 142],[54, 113],[64, 132],[60, 155],[58, 165],[58, 131],[57, 124],[61, 138],[58, 171],[46, 144],[59, 90],[68, 150],[54, 108],[49, 139],[43, 143],[70, 112],[47, 152],[60, 170],[59, 143],[40, 181],[58, 160],[57, 123],[58, 105],[56, 105],[51, 173],[61, 146],[56, 142],[62, 103],[57, 115],[63, 154],[52, 156],[63, 132],[47, 118],[41, 158],[58, 111],[45, 132],[67, 108],[51, 122],[50, 163],[56, 150],[57, 164],[58, 146],[77, 162],[56, 144],[52, 160],[61, 169],[60, 160],[61, 125],[48, 166],[55, 132],[35, 156],[43, 120],[44, 177],[48, 168],[54, 126],[66, 132],[62, 99],[58, 173],[55, 145],[62, 160],[59, 125],[61, 140],[62, 106],[63, 136],[43, 136],[65, 127],[40, 114],[60, 142],[60, 157],[57, 150],[70, 125]];
let sick = [[54, 160], [41, 179], [53, 173], [44, 175], [41, 153], [48, 175], [71, 162], [55, 161], [52, 190], [68, 115], [44, 173], [52, 169], [53, 160], [66, 152], [42, 178], [69, 131], [58, 165], [42, 194], [52, 172], [65, 140], [51, 125], [59, 182], [54, 152], [65, 157], [60, 96], [68, 151], [34, 174], [42, 173], [41, 172], [37, 187], [57, 174], [55, 155], [29, 202], [42, 162], [42, 122], [49, 162], [46, 152], [44, 169], [44, 188], [62, 146], [41, 168], [66, 114], [47, 179], [41, 132], [51, 157], [52, 147], [50, 159], [56, 153], [54, 165], [64, 122], [58, 172], [74, 121], [64, 154], [56, 169], [52, 169], [42, 150], [71, 130], [54, 167], [64, 133], [41, 168], [66, 151], [41, 163], [56, 162], [44, 179], [52, 178], [55, 166], [54, 158], [45, 152], [41, 172], [44, 149], [46, 156], [65, 151], [48, 180], [45, 185], [54, 163], [43, 171], [50, 162], [58, 154], [58, 144], [45, 138], [58, 162], [69, 151], [56, 178], [35, 174], [63, 150], [57, 163], [40, 178], [46, 160], [51, 143], [39, 182], [60, 160], [52, 162], [51, 149], [71, 125], [47, 143], [56, 163], [38, 173], [37, 170], [65, 148], [64, 144], [64, 105], [54, 147], [39, 152], [63, 172], [57, 168], [45, 175], [51, 166], [63, 179], [67, 142], [66, 138], [47, 156], [60, 171], [43, 162]];
var board = JXG.JSXGraph.initBoard('pointscloud', {boundingbox:[15,220,100,50],axis:false,showCopyright:false,showNavigation:false});
board.create('axis', [[20, 0], [20, 20]]);
board.create('axis', [[0, 65], [65, 65]]);
_.each(healthy, function (obs) {
    let hrate = obs[1], age = obs[0]; 
    board.create('point', [parseInt(age), hrate], {face:'o', withLabel:false, fillColor: 'blue', strokeColor: 'blue'});
});
_.each(sick, function (obs) {
    let hrate = obs[1], age = obs[0]; 
    board.create('point', [parseInt(age), hrate], {face:'o', withLabel:false});
});
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;[To be continued]&lt;/p&gt;
</description>
        <pubDate>Sun, 07 May 2017 00:00:00 +0200</pubDate>
        <link>http://mitxelmoriana.com/machine-learning/2017/05/07/machine-learning-desde-cero-III.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/machine-learning/2017/05/07/machine-learning-desde-cero-III.html</guid>
        
        <category>ai,</category>
        
        <category>machine</category>
        
        <category>learning,</category>
        
        <category>deep</category>
        
        <category>learning,</category>
        
        <category>python,</category>
        
        <category>programming</category>
        
        
        <category>machine-learning</category>
        
      </item>
    
      <item>
        <title>Machine learning desde cero II</title>
        <description>&lt;h2 id=&quot;repasito-unidimensional&quot;&gt;Repasito unidimensional&lt;/h2&gt;

&lt;p&gt;En el post anterior vimos cómo la predicción basada en una familia de datos de salida y una sola familia de datos de
entrada se podía expresar matemáticamente como el ajuste de una recta a una nube de puntos en el plano.&lt;/p&gt;

&lt;p&gt;La función objetivo de nuestro modelo consistía en encontrar los parámetros que minimizaban la recta de mejor
 ajuste a la nube de puntos. Es decir, minimizar la expresión:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum[y_i - (\alpha+\beta x_i)]^2&lt;/script&gt;

&lt;p&gt;A esta expresión la llamábamos función objetivo. A modo de ejercicio busqué el mínimo de la función objetivo, 
despejé para $\alpha$ y $\beta$ y llegué a la siguiente expresión matricial:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix} \alpha \\ \beta \end{bmatrix} =
\begin{bmatrix} n &amp; \sum x_i \\ \sum x_i &amp; \sum x_i^2 \end{bmatrix}^{-1}
\begin{bmatrix} \sum y_i \\ \sum x_i y_i \end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;Esta fue, precisamente, la expresión que utilicé en el script de python para realizar el cálculo de $\alpha$ y $\beta$,
aprovechando que la librería numpy nos permite realizar cálculos matriciales de forma muy sencilla:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sum_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sum_x_squared&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;power&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sum_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sum_xy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum_x_squared&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# matriz que invertimos&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum_xy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# vector&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linalg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# w es nuestro vector con los valores de alpha y beta&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;dos-mejor-que-uno&quot;&gt;Dos mejor que uno&lt;/h2&gt;

&lt;p&gt;Supongamos ahora que queremos realizar predicciones en base a dos inputs en lugar de uno solo.
Siguiendo el ejemplo de las viviendas del post anterior, supongamos que queremos predecir el &lt;code&gt;precio&lt;/code&gt; de las viviendas
no sólo en función de los &lt;code&gt;metros cuadrados habitables&lt;/code&gt; sino también de su &lt;code&gt;antigüedad&lt;/code&gt; en años.&lt;/p&gt;

&lt;p&gt;Dejo por aquí una nueva tabla de ejemplo con nuestros nuevos datos:&lt;/p&gt;

&lt;table class=&quot;table table-sm&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$m^2$ habitables&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;antigüedad (años)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;precio (€)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;92,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;42&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;259000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;62&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;295000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;109,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;40&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;279000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;114,5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;54&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;259000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;42&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;299000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;91,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;56&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;299000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;115,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;51&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;309000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;289000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;317,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;42&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;849000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;278,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;829000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;113,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;359000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;144,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;315000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90,6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;310000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;309000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;94,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;289000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;154,6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;50&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;369000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;138,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;419000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;127,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;405000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;23&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;439000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;116,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;40&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;375000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;157,0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;379000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;169,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;50&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;445000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;153,5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;44&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;379000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;165,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;48&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;389000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;369000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;170,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;31&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;458000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;111,5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;410000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Si quisiéramos plotear esta nueva tabla, es fácil ver que, si mantenemos nuestra variable respuesta &lt;code&gt;precio&lt;/code&gt; 
en la vertical, necesitaremos un nuevo eje cartesiano horizontal para la nueva variable &lt;code&gt;antigüedad&lt;/code&gt;. Si dos ejes
cartesianos constituyen un plano, dos ejes horizontales y uno vertical constituyen el espacio tridimensional de toda
la vida.&lt;/p&gt;

&lt;p&gt;Nuestra nube de puntos ahora se encontrará, en lugar de en el plano, en el espacio. ¡Veámoslo!&lt;/p&gt;

&lt;div id=&quot;visualization1&quot; style=&quot;border:1px solid black;&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var data_m2 = [92.7,139.4,109.2,114.5,104.1,91.8,115.2,139.4,317.7,278.7,113.8,144.2,90.6,104.1,94.8,139.4,154.6,138.2,127.8,139.4,116.7,157.0,169.1,153.5,165.1,139.7,170.1,111.5];
var data_age = [42,62,40,54,42,56,51,32,42,14,32,30,30,32,46,32,50,22,17,23,40,22,50,44,48, 3,31,30];
var data_price = [259000,295000,279000,259000,299000,299000,309000,289000,849000,829000,359000,315000,310000,309000,300000,289000,369000,419000,405000,439000,375000,379000,445000,379000,389000,369000,458000,410000];

var data = new vis.DataSet();
for (var i = 0; i &lt; data_m2.length; ++i) {
    data.add({id:i, x:data_m2[i], y:data_age[i], z:data_price[i]});
}

var options = {
    width:  '100%',
    height: '500px',
    style: 'dot',
    verticalRatio: 0.5,
    cameraPosition: {
        horizontal: 0.915,
        vertical: 0.17,
        distance: 1.8
    },
    keepAspectRatio: false,
    xLabel: 'm2 habitables',
    yLabel: 'antigüedad',
    zLabel: 'precio',
    tooltip: true
};

var container = document.getElementById('visualization1');
var graph3d = new vis.Graph3d(container, data, options);
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
Nuestra vieja función objetivo contenía dos incógnitas, $\alpha$ y $\beta$, que definían la recta de mejor ajuste
en nuestro modelo de predicción, a saber: el ajuste de una recta a una nube de puntos en el plano.&lt;/p&gt;

&lt;p&gt;Ahora la mera representación de nuestros datos exige una dimensión adicional y, por tanto, nuestro modelo tendrá 
que ser capaz de adaptarse y capturar la tendencia de nuestra nueva nube de puntos, que ahora se encuentra en el espacio.&lt;/p&gt;

&lt;p&gt;Siguiendo la misma filosofía de “elemento geométrico que mejor se ajusta a la nube de puntos”, ¿qué tipo de elemento
geométrico lineal crees que necesitaremos capaz de ajustarse a una nube de puntos en el espacio?&lt;/p&gt;

&lt;p&gt;¡El plano! Con el plano podemos mantener la misma filosofía de “mínimas distancias verticales” plano-punto, sin embargo
va a ser necesario replantear nuestra vieja función objetivo, puesto que cuando la construimos no teníamos en cuenta la
nueva dimensión que hemos introducido. ¡Presta atención a la pauta que sigue la nueva función objetivo con respecto a la vieja, 
porque más adelante nos ayudará a construir la función objetivo para cualquier número de dimensiones adicionales!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sean dos series de inputs de entrada (dos variables predictoras) ${x_1}_i$ y ${x_2}_i$&lt;/li&gt;
  &lt;li&gt;Sea una serie de outputs de salida (variable respuesta) $y_i$&lt;/li&gt;
  &lt;li&gt;Y sea un plano arbitrario definido como $y=\alpha+\beta_1 x_1+\beta_2 x_2$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para cada punto del espacio definido como $({x_1}_i, {x_2}_i, y_i)$, la distancia vertical de dicho punto a nuestro
plano arbitrario será:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\epsilon_i = y_i - (\alpha+\beta_1 {x_1}_i+\beta_2 {x_2}_i)&lt;/script&gt;

&lt;p&gt;Ahora es un momento ideal para tratar de re-expresar nuestra función distancia de forma que facilite la introducción
de nuevas variables en el futuro. En el fondo se trata de un sencillo ejercicio de álgebra e imaginación:&lt;/p&gt;

&lt;p&gt;Para facilitar las cosas renombremos $\alpha$ como $\beta_0$ y supongamos que está multiplicando al número $1$. Nuestra
función quedaría del siguiente modo:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\epsilon_i = y_i - (\beta_0 1+ \beta_1 {x_1}_i+\beta_2 {x_2}_i)
\tag{1}&lt;/script&gt;

&lt;p&gt;El segundo término de la resta no es más que un sumatorio, que puede re-expresarse como el producto punto (o producto escalar)
entre dos vectores, en este caso:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\epsilon_i = y_i - 
\begin{bmatrix} \beta_0 &amp; \beta_1 &amp; \beta_2 \end{bmatrix} 
\begin{bmatrix} 1 \\ {x_1}_i \\ {x_2}_i \end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;En la literatura matemática tradicional se puede encontrar al vector de las betas representado simplemente con una $\beta$ 
y con el nombre de vector de estimadores, mientras que en machine learning puede encontrarse representado por la letra $w$ y se le 
suele llamar vector de pesos o &lt;em&gt;weights&lt;/em&gt;. El vector de equises (con el 1 como primer elemento), por su lado, 
suele representarse, sencillamente, con una $x$.&lt;/p&gt;

&lt;p&gt;Por tanto, nuestra expresión con la notación habitual en machine learning podría re-escribirse como:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\epsilon_i = y_i - w^T x&lt;/script&gt;

&lt;p&gt;Nótese que si agregáramos ahora nuevas variables predictoras, lo único que haríamos sería incrementar la dimensión
de los vectores $w$ y $x$, es decir, si en el ejemplo con dos variables predictoras sabemos que se trata de vectores
$3\times1$, agregando una tercera variable se convertirían en vectores $4\times1$ y así seguiríamos hasta cualquiera número de 
variables predictoras. En general, para $k$ variables predictoras obtendríamos vectores de dimensión $(k+1)\times1$, 
sin embargo nuestra expresión para la distancia sería la misma. ¡Ya estamos un pasito más cerca de la generalización!&lt;/p&gt;

&lt;p&gt;Vayamos ahora un poquito más allá y re-expresemos también matricialmente el conjunto de distancias, es decir, en lugar
conformarnos con la expresión para cada $\epsilon_i$, pongamos todas las $epsilon$ en un solo vector y re-expresemos
 la parte derecha de la igualdad para satisfacer la equivalencia.&lt;/p&gt;

&lt;p&gt;Teniendo en cuenta la expresión (1), si pasáramos todo en forma de vector, a lo loco, nos quedaría algo como esto 
para el caso de dos variables predictoras y n observaciones (n puntos en la nube):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{bmatrix} \epsilon_1 \\ \vdots \\ \epsilon_n \end{bmatrix} = 
\begin{bmatrix} y_1 \\ \vdots \\ y_n \end{bmatrix} -
\begin{bmatrix} \beta_0 1+ \beta_1 {x_1}_1+\beta_2 {x_2}_1 \\ \vdots \\ \beta_0 1+ \beta_1 {x_1}_n+\beta_2 {x_2}_n \end{bmatrix}&lt;/script&gt;

&lt;p&gt;Todo apunta a que la magia del álgebra lineal nos permite re-expresar el vector de más a la derecha de forma mucho más
elegante, ¿qué tal un producto punto entre una matriz y el vector de betas?&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix} \epsilon_1 \\ \vdots \\ \epsilon_n \end{bmatrix} = 
\begin{bmatrix} y_1 \\ \vdots \\ y_n \end{bmatrix} -
\begin{bmatrix} 1 &amp; {x_1}_1 &amp; {x_2}_1 \\ \vdots &amp; \vdots &amp; \vdots \\ 1 &amp; {x_1}_n &amp; {x_2}_n \end{bmatrix}
\begin{bmatrix} \beta_0 \\ \beta_1 \\ \beta_2 \end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;En la literatura matemática encontraremos esta expresión matricial de las distancias en su forma simbólica abreviada:
$\epsilon$ representando al vector de distancias, $y$ representando al vector de valores de la variable respuesta,
$X$ representando a la matriz con la columna de unos y las observaciones de las variables predictoras y, finalmente,
$b$ para el vector de estimadores. En machine learning, por otro lado, no es raro encontrar expresado el vector 
de valores de la variable respuesta como $T$ de &lt;em&gt;target&lt;/em&gt; o valores objetivo y, como ya vimos antes, 
el vector de estimadores o parámetros incógnita como $w$ de vector de pesos o &lt;em&gt;weights&lt;/em&gt;, en definitiva:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\epsilon = T - Xw 
\tag{2}&lt;/script&gt;

&lt;p&gt;Esta expresión es elegante y potente al mismo tiempo. Primeramente porque se puede emplear para cualquier número de 
variables predictoras, siempre y cuando tengamos en cuenta que las dimensiones de $X$ y $w$ cambiarán. Por ejemplo:
en el caso de dos variables predictoras $X$ tiene dimensiones $n\times3$ y $w$ dimensiones $3\times1$. En el caso
 de tres variables predictoras $X$ será una matriz $n\times4$ y $w$ un vector $4\times1$. Cae de cajón, por tanto,
 que en el caso general, para $n$ observaciones y $k$ variables predictoras, $X$ será una matriz $n\times(k+1)$ y $w$ 
 un vector $(k+1)\times1$.&lt;/p&gt;

&lt;p&gt;En segundo lugar, la gran ventaja de esta expresión matricial es que nos va a permitir expresar y resolver
nuestra función objetivo sin despeinarnos y, además, ¡para cualquier número de variables predictoras!&lt;/p&gt;

&lt;p&gt;Recordemos que nuestra función objetivo no era la expresión de las distancias en sí, sino el mínimo del
 sumatorio de las distancias al cuadrado, es decir:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum\epsilon_i^2&lt;/script&gt;

&lt;p&gt;Si abrazas la magia del álgebra lineal, este sumatorio también se puede expresar como
el producto punto entre dos vectores de epsilons:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\sum\epsilon_i^2 = \epsilon_1 \epsilon_1 + \dots + \epsilon_n \epsilon_n =
\begin{bmatrix} \epsilon_1 &amp; \dots &amp; \epsilon_n \end{bmatrix} 
\begin{bmatrix} \epsilon_1 \\ \vdots \\ \epsilon_n \end{bmatrix} =
\epsilon^T \epsilon %]]&gt;&lt;/script&gt;

&lt;p&gt;Empleando nuestra maravillosa expresión (2) al producto punto entre los vectores epsilons y operando obtendremos
nuestra nueva función objetivo en forma de operaciones matriciales. Nótese que estamos multiplicando vectores y 
matrices, no escalares, por lo que la transposición, la propiedad distributiva y las simplificaciones se han aplicar 
con especial cariño (siguiendo las propiedades de vectores y matrices):&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum\epsilon_i^2 = \epsilon^T \epsilon =
(T - Xw)^T (T - Xw) \\
= T^TT - T^TXw - w^TX^TT + w^TX^TXw \\
= T^TT - 2w^TX^TT + w^TX^TXw&lt;/script&gt;

&lt;p&gt;Nuestra función objetivo para el caso general será, por tanto:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum\epsilon_i^2 = 
T^TT - 2w^TX^TT + w^TX^TXw&lt;/script&gt;

&lt;p&gt;Ahora hemos de derivar respecto al vector de parámetros incógnita o vector de pesos $w$. Esta derivada no es
 ni mucho menos trivial y consiste, de forma simplificada, en ver que no existe vector de incógnitas en el primer término 
(su derivada será nula), que el segundo término equivale a la derivada de una expresión lineal y que la derivada
del último término equivale a la derivada de una expresión cuadrática (el vector de incógnitas aparece dos veces).
Se puede consultar la demostración de estas derivadas en cualquier libro medianamente exhaustivo sobre el modelo de 
mínimos cuadrados (pregunta en el área de comentarios si tienes curiosidad). El resultado sería el siguiente:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\dfrac{\partial (\sum\epsilon_i^2)}{\partial w} = -2X^TT + 2X^TXw&lt;/script&gt;

&lt;p&gt;Igualando a cero y despejando para el vector de incógnitas:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;-2X^TT + 2X^TXw = 0&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;w = (X^TX)^{-1}X^TT \tag{3}&lt;/script&gt;

&lt;p&gt;Nótese que esta expresión (3) nos permite calcular los parámetros $\beta$ para cualquier número de variables predictoras,
incluyendo nuestro ejemplo al principio de este post (dos variables predictoras) y, también, el ejemplo del primer
post sobre regresión lineal (una variable predictora). El resultado $w$ será, en cada uno de los casos, un vector
con dimensiones $k+1$, donde $k$ será el número de variable predictoras con que alimentemos nuestro modelo de ajuste
lineal.&lt;/p&gt;

&lt;p&gt;Escribamos, por fin, nuestro script en python para resolver el caso general de regresión lineal y resolvamos
el ejemplo que puse al principio del post, es decir, calculemos el plano que mejor se ajusta a la nube de puntos
en el espacio:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LinearRegression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number_of_predictive_variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;         &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number_of_predictive_variables&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;         &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_predictive_variables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;x_matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_var&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;x_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_var&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;         &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linalg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;x_values_vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;x_values_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_value&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_values_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;92.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;109.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;114.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;104.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;91.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;115.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;317.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;278.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;113.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;144.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;90.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;104.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;94.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;                &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;154.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;138.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;116.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;157.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;169.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;153.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;165.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;170.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;111.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;                &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;259000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;295000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;279000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;259000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;299000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;299000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;309000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;289000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;849000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;829000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;359000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;315000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;310000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;               &lt;span class=&quot;mi&quot;&gt;309000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;289000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;369000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;419000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;405000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;439000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;375000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;379000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;445000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;379000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;389000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;369000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;               &lt;span class=&quot;mi&quot;&gt;458000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;410000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinearRegression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;weights (vector of betas) =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;price prediction for 50 m2 and 0 years =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;price prediction for 50 m2 and 30 years =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;price prediction for 50 m2 and 100 years =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# weights (vector of betas) = [ 83455.24240792   2494.67526436  -1438.1104518 ]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# price prediction for 50 m2 and 0 years = 208189.005626&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# price prediction for 50 m2 and 30 years = 165045.692072&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# price prediction for 50 m2 and 100 years = 64377.9604464&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
Nuestro vector de betas o pesos define ahora un plano en el espacio. Si lo ploteamos obtenemos nuestro plano 
de predicción del &lt;code&gt;precio&lt;/code&gt; de una vivienda en función de sus &lt;code&gt;m2 habitables&lt;/code&gt; y su &lt;code&gt;antigüedad&lt;/code&gt;:&lt;/p&gt;

&lt;div id=&quot;visualization2&quot; style=&quot;border:1px solid black;&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var data = new vis.DataSet();
    var counter = 0;
    var steps = 50; //steps*steps nodes
    var xAxisMax = 350;
    var yAxisMax = 65;
    var xAxisStep = xAxisMax / steps;
    var yAxisStep = yAxisMax / steps;
    for (var x = 0; x &lt; xAxisMax; x +=xAxisStep) {
        for (var y = 0; y &lt; yAxisMax; y += yAxisStep) {
            var value = 83455.24240792 + 2494.67526436 * x - 1438.1104518 * y;
            data.add({id:counter++, x:x, y:y, z:value, style:value});
        }
    }

    var options = {
        width:  '100%',
        height: '500px',
        style: 'surface',
        showPerspective: true,
        showGrid: true,
        showShadow: false,
        keepAspectRatio: false,
        cameraPosition: {
            horizontal: 0.915,
            vertical: 0.17,
            distance: 1.8
        },
        xLabel: 'm2 habitables',
        yLabel: 'antigüedad',
        zLabel: 'precio',
        verticalRatio: 0.5
    };

    var container = document.getElementById('visualization2');
    var graph3d = new vis.Graph3d(container, data, options);
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
Curiosamente, a partir de dos variables predictoras (tres, veinte, mil, etc.), ya no es posible representar gráficamente
el elemento geométrico que mejor se ajusta a la nube de puntos (hiperplano en un espacio de más de tres dimensiones), 
de hecho, ya no nos será posible ni siquiera representar la nube de puntos. En cualquier caso, gracias a nuestro modelo
generalizado para la regresión lineal multidimensional, podremos resolver numéricamente nuestro vector de pesos 
y predecir la variable respuesta con cualquier número de variables predictoras.&lt;/p&gt;

&lt;p&gt;Llegados a este punto ya tenemos una idea aproximada de las bases sobre las que se asientan algunos algoritmos de clasificación
que veremos más adelante. Además, podemos imaginar que los ajustes no lineales seguirán lógicas parecidas, pero utilizando
figuras geométricas “flexibles”, es decir, curvas y superficies curvadas cuyo objetivo será ajustarse aún mejor
a las nubes de puntos en cualesquiera dimensiones, es decir, hacer predicciones aún más fiables.&lt;/p&gt;

&lt;p&gt;Por supuesto, estos métodos no lineales plantearán nuevas cuestiones y dificultades: ¿cómo calcularemos la función 
curva que mejor se ajusta a la nube de puntos? ¿si es posible ajustar perfectamente a la nube de puntos, hasta qué punto
es más fiable dejar ciertas distancias figura-punto y alisar la figura geométrica curvada? ¿si hemos de alisarla, 
hasta qué punto hemos de alisarla? Confío en que todas estas cuestiones las iremos viendo más adelante.&lt;/p&gt;

&lt;p&gt;Por otro lado, el análisis de la bondad de ajuste es un tema 
muy importante de cara a evitar algunos problemas típicos de la regresión lineal, por ejemplo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La posibilidad de que nuestra nube de puntos sea un cúmulo de puntos sin sentido, es decir, con muy poca 
correlación entre las variables predictivas y la variable respuesta. Nuestro modelo arrojará resultados 
en cualquier caso, pero ¿cómo de fiables serán las predicciones? ¿hay algún modo de preverlo? 
Para tener una idea de la fiabilidad del modelo, en el caso lineal, se calcula el llamado 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;Coeficiente de Determinación o $R^2$&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;La posibilidad de que dos o más de las variables predictivas se “expliquen” unas a otras, por ejemplo: en el caso
de las viviendas la variable &lt;code&gt;metros cuadrados habitables&lt;/code&gt; se correlacionará estrechamente con la variable 
&lt;code&gt;metros cuadrados construidos&lt;/code&gt;. “Alimentar” a nuestro modelo con variables tan estrechamente correlacionadas como estas 
introduce importantes distorsiones en el análisis del aporte de cada una de las variables a la bondad de ajuste del modelo. 
A este problema o fenómeno lo conocen nuestros amigos, los estadísticos, como &lt;a href=&quot;https://en.wikipedia.org/wiki/Multicollinearity&quot;&gt;multicolinealidad&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basta decir que es posible tratar de prevenir esta clase de problemas a través de múltiples tests matemáticos
que, a fin de cuentas, permiten una elección inteligente de las variables predictivas y nos ayudan, en la medida de lo posible,
a incrementar la bondad de ajuste de nuestro modelo lineal. Al respecto, aconsejo echar un vistazo a cualquier libro de estadística 
o a cualquier curso online sobre regresión lineal aplicada para estar al tanto de estas cuestiones importantes. 
A mí me parece bastante práctico y al grano el curso online &lt;a href=&quot;https://onlinecourses.science.psu.edu/stat501/node/250&quot;&gt;STAT501&lt;/a&gt; 
del &lt;a href=&quot;http://science.psu.edu/&quot;&gt;Colegio de Ciencias&lt;/a&gt; de la &lt;a href=&quot;http://www.psu.edu/&quot;&gt;Universidad Estatal de Pensilvania&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si alguien quiere indagar en la parte estadística y rigurosa de la regresión lineal, es bueno saber
que existe software estadístico muy completo que asiste con la regresión y los tests 
necesarios para analizar la bondad de ajuste. A mí, personalmente, me gusta el software comercial 
&lt;a href=&quot;https://www.minitab.com/es-mx/products/minitab/&quot;&gt;Minitab&lt;/a&gt;,por sencillo e intuitivo, aunque no me cabe ninguna 
duda de que también se puede hacer magia estadística con el más espartano y open source 
&lt;a href=&quot;https://cran.rstudio.com/&quot;&gt;R&lt;/a&gt; + &lt;a href=&quot;https://www.rstudio.com/products/rstudio/#Desktop&quot;&gt;RStudio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En cualquier caso, nosotros vamos a seguir dándole al machine learning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Próximamente&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En el próximo post sobre machine learning compartiré mis apuntes sobre algoritmos básicos de clasificación:
la clasificación lineal y la regresión logística.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Dec 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/machine-learning/2016/12/01/machine-learning-desde-cero-II.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/machine-learning/2016/12/01/machine-learning-desde-cero-II.html</guid>
        
        <category>ai,</category>
        
        <category>machine</category>
        
        <category>learning,</category>
        
        <category>deep</category>
        
        <category>learning,</category>
        
        <category>python,</category>
        
        <category>programming</category>
        
        
        <category>machine-learning</category>
        
      </item>
    
      <item>
        <title>Machine learning desde cero I</title>
        <description>&lt;h2 id=&quot;learning-machine-learning&quot;&gt;Learning machine learning&lt;/h2&gt;

&lt;p&gt;Como yo tengo memoria de pez y un blog de tecnología he decidido ir subiendo los apuntes que voy tomando sobre
los temas de machine learning sobre los que voy leyendo, junto con los desarrollos matemáticos que a mí me parecen 
esenciales para la comprensión de cada tema.&lt;/p&gt;

&lt;p&gt;Pues nada, dejo por aquí mis apuntes sobre la regresión lineal.&lt;/p&gt;

&lt;h2 id=&quot;la-regresión-como-predicción&quot;&gt;La regresión como predicción&lt;/h2&gt;

&lt;p&gt;Desde el punto de vista del machine learning, la regresión lineal es una forma de aprendizaje supervisado:
nosotros entrenamos a la computadora de una familia de inputs y outputs y luego la invitamos
a predecir cuál será el output para cualquier input arbitrario.&lt;/p&gt;

&lt;p&gt;Como en cualquier otro sistema de aprendizaje supervisado, proveemos a la computadora 
de la función de entrenamiento, es decir, la función cuya ejecución 
nos permite ir ajustando/mejorando el sistema predictivo.&lt;/p&gt;

&lt;h2 id=&quot;regresión-lineal-con-una-sola-familia-de-inputs-o-regresión-lineal-unidimensional-o-mínimos-cuadrados-ordinarios-o-regresión-lineal-de-toda-la-vida&quot;&gt;Regresión lineal con una sola familia de inputs o regresión lineal unidimensional o mínimos cuadrados ordinarios o regresión lineal de toda la vida&lt;/h2&gt;

&lt;p&gt;Cuando tenemos una sola familia de inputs (datos de entrada o variable predictora) asociada a una sola familia de outputs 
(datos de salida o variable respuesta)
es fácil ver que la regresión lineal consistirá en una recta. La mejor forma de “fácil verlo” es, por supuesto, mediante un ejemplo:&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos una serie de datos, por ejemplo &lt;code&gt;metros cuadrados habitables&lt;/code&gt; de una lista de viviendas. 
Supongamos también que disponemos de los &lt;code&gt;precios&lt;/code&gt; de cada una de las viviendas y que queremos realizar predicciones del 
&lt;code&gt;precio&lt;/code&gt; basándonos en nuestros datos sobre los &lt;code&gt;metros cuadrados habitables&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nuestro input serán los &lt;code&gt;metros cuadrados habitables&lt;/code&gt; y nuestro output o variable que queremos predecir será, 
por tanto, el &lt;code&gt;precio&lt;/code&gt; de la vivienda.&lt;/p&gt;

&lt;p&gt;A modo de ejemplo, dejo por aquí una tabla con nuestro input y output de ejemplo:&lt;/p&gt;

&lt;table class=&quot;table table-sm&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$m^2$ habitables&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;precio (€)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;92,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;259000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;295000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;109,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;279000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;114,5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;259000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;299000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;91,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;299000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;115,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;309000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;289000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;317,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;849000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;278,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;829000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;113,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;359000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;144,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;315000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;90,6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;310000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;104,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;309000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;94,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;289000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;154,6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;369000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;138,2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;419000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;127,8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;405000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;439000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;116,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;375000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;157,0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;379000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;169,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;445000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;153,5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;379000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;165,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;389000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;139,7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;369000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;170,1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;458000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;111,5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;410000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Si ploteamos sobre ejes cartesianos nuestra magnífica tabla de ejemplo veremos algo parecido a lo siguiente:&lt;/p&gt;

&lt;div id=&quot;pointscloud&quot; class=&quot;jxgbox&quot; style=&quot;width:400px; height:400px;&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var data = {
    &quot;92.7&quot;: 259000,
    &quot;109.2&quot;: 279000,
    &quot;114.5&quot;: 259000,
    &quot;91.8&quot;: 299000,
    &quot;115.2&quot;: 309000,
    &quot;317.7&quot;: 849000,
    &quot;278.7&quot;: 829000,
    &quot;113.8&quot;: 359000,
    &quot;144.2&quot;: 315000,
    &quot;90.6&quot;: 310000,
    &quot;104.1&quot;: 309000,
    &quot;94.8&quot;: 300000,
    &quot;154.6&quot;: 369000,
    &quot;138.2&quot;: 419000,
    &quot;127.8&quot;: 405000,
    &quot;139.4&quot;: 439000,
    &quot;116.7&quot;: 375000,
    &quot;157.0&quot;: 379000,
    &quot;169.1&quot;: 445000,
    &quot;153.5&quot;: 379000,
    &quot;165.1&quot;: 389000,
    &quot;139.7&quot;: 369000,
    &quot;170.1&quot;: 458000,
    &quot;111.5&quot;: 410000
};
var board = JXG.JSXGraph.initBoard('pointscloud', {boundingbox:[-75,1000000,350,-100000], axis:true, showCopyright:false, showNavigation:false });
_.each(data, function (price, sqmeters) {
    board.create('point', [parseFloat(sqmeters), price], {face:'o', withLabel:false});
});
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
A primera vista del gráfico, no parece descabellado pensar que existe una fuerte correlación positiva lineal entre 
los &lt;code&gt;metros cuadrados habitables&lt;/code&gt; y el &lt;code&gt;precio&lt;/code&gt;. Dicho de otro modo, si nos pidieran que predijéramos un &lt;code&gt;precio&lt;/code&gt; 
para una vivienda de 50 metros cuadrados, seguramente lo situaríamos, a ojo, alrededor de los 150.000 €, 
ya que nuestro magnífico cerebro intuye que existe un patrón lineal, una recta imaginaria, que se ajusta a la nube 
de puntos y que, aparentemente, predice con un margen de error aceptable el precio en función de los metros.
Nuestro objetivo es, por tanto, calcular esa recta imaginaria que mejor se ajusta a la nube de puntos.&lt;/p&gt;

&lt;p&gt;Si los puntos de nuestra serie de datos
se ajustasen perfectamente a una recta imaginaria, la distancia entre cada punto y dicha recta sería nula. Puesto que
no se ajustará perfectamente, veremos que existe cierta distancia entre cada punto del gráfico y dicha recta imaginaria. 
Así pues, una forma matemática de expresar “la recta que mejor se ajusta a la nube de puntos” podría ser: 
“aquella recta que minimiza el sumatorio de distancias entre la recta imaginaria y cada uno de los puntos”.&lt;/p&gt;

&lt;p&gt;El lector avispado ahora se preguntará: ¿qué distancia puntos-recta tomaremos? ¿la distancia recta-puntos horizontal? 
¿la distancia recta-puntos vertical o la distancia al punto perpendicular a la recta (mínima distancia punto-recta)?&lt;/p&gt;

&lt;div id=&quot;verticaldistances&quot; class=&quot;jxgbox&quot; style=&quot;width:400px; height:400px;&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var board2 = JXG.JSXGraph.initBoard('verticaldistances', {boundingbox:[-1,5,5,-1], axis:true, showCopyright:false, showNavigation:false});
board2.create('text',[1, 4.5, 'DISTANCIAS PUNTOS-RECTA']);
board2.create('line', [[-2,-2], [11,11]]);

board2.create('point', [0.5, 1.5], {face:'o', withLabel:false});
board2.create('line', [[0.5, 1.5], [1.5, 1.5]], {straightFirst: false, straightLast: false, strokeColor:'#ff0000', withLabel: true, name:'horizontal'});

board2.create('point', [2, 3], {face:'o', withLabel:false});
board2.create('line', [[2, 3], [2, 2]], {straightFirst: false, straightLast: false, strokeColor:'#00ff00', withLabel: true, name:'vertical'});

board2.create('point', [4, 2.5], {face:'o', withLabel:false});
board2.create('line', [[4, 2.5], [3.25, 3.25]], {straightFirst: false, straightLast: false, strokeColor:'#ff0000', withLabel: true, name:'perpendicular'});
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
En la regresión lineal ordinaria se toman las distancias verticales. Primeramente porque nuestro objetivo es predecir el valor
de la vertical (el precio, en el ejemplo) y su ajuste con respecto a la recta (la predicción) y en segundo lugar porque la 
posición horizontal de cada punto es de sobras conocida en cada caso, no introduce ningún posible error y, por tanto, no 
tiene mucho sentido ponderarla (y, de paso, complicar los cálculos).&lt;/p&gt;

&lt;p&gt;Existen modelos distintos a la regresión lineal ordinaria en los que tiene sentido tomar las distancias perpendiculares:
modelos basados en datos aproximados que introducen posibles errores en las dos direcciones, modelos no lineales, etc.
(la &lt;a href=&quot;https://en.wikipedia.org/wiki/Deming_regression&quot;&gt;regresión de Deming&lt;/a&gt; es un ejemplo de ajuste lineal tomando las
distancias ortogonales).&lt;/p&gt;

&lt;p&gt;Empecemos con las mates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sea una serie de inputs de entrada $x_i$&lt;/li&gt;
  &lt;li&gt;Sea una serie de outputs de salida $y_i$&lt;/li&gt;
  &lt;li&gt;Y sea una recta arbitraria definida como $y=\alpha+\beta x$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para cada punto del plano definido como $(x_i, y_i)$, la distancia vertical $\epsilon_i$ del punto a la recta será:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\epsilon_i = y_i - (\alpha+\beta x_i)&lt;/script&gt;

&lt;p&gt;Como queremos minimizar la distancia de todos los puntos con respecto a la recta, una buena primera idea sería tratar
 de minimizar el sumatorio de los puntos:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum\epsilon_i = \sum(y_i - (\alpha+\beta x_i))&lt;/script&gt;

&lt;p&gt;Sin embargo, hay que tener en cuenta que algunos puntos caerán por encima de la recta (distancia positiva) y otros puntos
caerán por debajo de la recta (distancia negativa), con lo cual la suma total tendrá un resultado distorsionado
de cara a valorar el ajuste de la recta a la nube de puntos.&lt;/p&gt;

&lt;p&gt;Existen dos formas habituales de resolver este problemilla: hacer el sumatorio de valores absolutos de las distancias o
hacer el sumatorio de cuadrados de la distancia. Las dos opciones son viables pero, como ya hicimos antes,
optaremos por la opción que se comporta mejor analítica y algebraicamente que, en este caso, será el 
cuadrado de las distancias (para los curiosos, aquí hay información sobre el modelo de 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Least_absolute_deviations&quot;&gt;mínimas desviaciones absolutas&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;La desventaja de utilizar el cuadrado de las distancias en lugar del valor absoluto
es que sobrevaloraremos aquellos puntos que estén muy desviados respecto a la recta. De hecho, existen 
modelos de ajuste lineal más refinados que, por ejemplo, tratan de compensar la desviación ocasionada por el uso
del cuadrado mediante la adición de sumandos “compensadores” o “regularizadores” (más info sobre el tema en
&lt;a href=&quot;https://en.wikipedia.org/wiki/Tikhonov_regularization&quot;&gt;Tikhonov regularization&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Nosotros, por ahora, nos conformaremos con el modelo ordinario y, por tanto, intentaremos minimizar la expresión:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum\epsilon_i^2 = \sum[y_i - (\alpha+\beta x_i)]^2&lt;/script&gt;

&lt;p&gt;Minimizar esta función matemática equivale a encontrar los valores $\alpha$ y $\beta$ para los cuales el resultado
del sumatorio de distancias al cuadrado es menor. Nótese que $\alpha$ y $\beta$ son, precisamente, las variables
que definen nuestra recta mejor ajustada.&lt;/p&gt;

&lt;p&gt;Como se trata de encontrar el mínimo de una función de dos variables, debemos realizar la derivada parcial de
las distancias al cuadrado en función de cada una de las variables, igualar a cero y buscarnos la vida para 
despejar $\alpha$ y $\beta$ a partir de las dos expresiones resultantes.&lt;/p&gt;

&lt;p&gt;Vayamos al lío. Derivando respecto a $\alpha$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\dfrac{\partial (\sum\epsilon_i^2)}{\partial \alpha} = -2 \sum[y_i - (\alpha+\beta x_i)] = 0&lt;/script&gt;

&lt;p&gt;Ordenando un poquito los términos obtenemos:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum y_i - \sum \alpha - \sum x_i \beta = 0&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;n \alpha + \sum x_i \beta = \sum y_i \tag{1}&lt;/script&gt;

&lt;p&gt;Análogamente, realizando la derivada parcial respecto a $\beta$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\dfrac{\partial (\sum\epsilon_i^2)}{\partial \beta} = -2\sum[x_i(y_i - (\alpha+\beta x_i))] = 0&lt;/script&gt;

&lt;p&gt;Y ordenando los términos:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum x_i y_i - \sum x_i \alpha - \sum x_i^2 \beta = 0&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum x_i \alpha + \sum x_i^2 \beta = \sum x_i y_i \tag{2}&lt;/script&gt;

&lt;p&gt;Si ahora expresamos matricialmente el sistema de dos ecuaciones lineales (1) y (2), podemos despejar $\alpha$ y $\beta$
con operaciones matriciales muy sencillas:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix} n &amp; \sum x_i \\ \sum x_i &amp; \sum x_i^2 \end{bmatrix} 
\begin{bmatrix} \alpha \\ \beta \end{bmatrix} =
\begin{bmatrix} \sum y_i \\ \sum x_i y_i \end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix} \alpha \\ \beta \end{bmatrix} =
\begin{bmatrix} n &amp; \sum x_i \\ \sum x_i &amp; \sum x_i^2 \end{bmatrix}^{-1}
\begin{bmatrix} \sum y_i \\ \sum x_i y_i \end{bmatrix}
\tag{3} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix} \alpha \\ \beta \end{bmatrix} =
\frac{1}{n \sum x_i^2 - (\sum x_i)^2 } \begin{bmatrix} \sum x_i^2 &amp; -\sum x_i \\ -\sum x_i &amp; n \end{bmatrix}
\begin{bmatrix} \sum y_i \\ \sum x_i y_i \end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{bmatrix} \alpha \\ \beta \end{bmatrix} =
\frac{1}{n \sum x_i^2 - (\sum x_i)^2 } 
\begin{bmatrix} 
\sum x_i^2 \sum y_i - \sum x_i \sum x_i y_i \\
-\sum x_i \sum y_i + n \sum x_i y_i
\end{bmatrix}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\alpha = \frac{\sum x_i^2 \sum y_i - \sum x_i \sum x_i y_i}{n \sum x_i^2 - (\sum x_i)^2 } \tag{4}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\beta = \frac{-\sum x_i \sum y_i + n \sum x_i y_i}{n \sum x_i^2 - (\sum x_i)^2 } \tag{5}&lt;/script&gt;

&lt;p&gt;Aunque las operaciones (4) y (5) parecen auténticos mastodontes a primera vista, 
se pueden simplificar enormemente si les aplicamos las definiciones de &lt;a href=&quot;https://es.wikipedia.org/wiki/Media_aritm%C3%A9tica&quot;&gt;promedio&lt;/a&gt;, 
&lt;a href=&quot;https://es.wikipedia.org/wiki/Varianza&quot;&gt;varianza&lt;/a&gt; y &lt;a href=&quot;https://en.wikipedia.org/wiki/Covariance&quot;&gt;covarianza&lt;/a&gt; y expresamos $\alpha$ en función de $\beta$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\beta = \frac{ss_{xy}}{ss_{xx} ss_{yy}}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\alpha = \bar{y} - \beta \bar{x}&lt;/script&gt;

&lt;p&gt;Nuestro objetivo, sin embargo, no es tanto expresar elegantemente nuestro modelo como computarlo eficientemente. Para 
ello utilizaremos una magnífica librería para python llamada numpy, ideal para mates discretas y computación científica
en general.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleLinearRegression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;         &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;sum_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;sum_x_squared&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;power&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;sum_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;sum_xy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum_x_squared&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum_xy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;         &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linalg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_intercept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_slope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;92.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;109.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;114.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;104.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;91.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;115.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;317.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;278.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;113.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;144.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;90.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;104.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;94.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;               &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;154.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;138.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;116.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;157.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;169.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;153.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;165.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;139.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;170.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;111.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;259000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;295000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;279000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;259000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;299000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;299000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;309000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;289000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;849000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;829000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;359000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;315000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;310000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;               &lt;span class=&quot;mi&quot;&gt;309000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;289000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;369000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;419000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;405000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;439000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;375000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;379000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;445000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;379000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;389000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;369000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;               &lt;span class=&quot;mi&quot;&gt;458000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;410000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleLinearRegression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;intercept (alpha) =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_intercept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# intercept (alpha) = 21502.4801962&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;slope (beta) =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_slope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# slope (beta) = 2563.87624406&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;prize prediction for 50 m2 =&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# prize prediction for 50 m2 = 149696.292399&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ya podemos plotear nuestra línea de mejor ajuste y hacer predicciones en función de cualquier input
de metros cuadrados habitables:&lt;/p&gt;

&lt;div id=&quot;linearregression&quot; class=&quot;jxgbox&quot; style=&quot;width:400px; height:400px;&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var board3 = JXG.JSXGraph.initBoard('linearregression', {boundingbox:[-25,1000000,350,-100000], axis:true, showCopyright:false, showNavigation:false });
_.each(data, function (price, sqmeters) {
    board3.create('point', [parseFloat(sqmeters), price], {face:'o', withLabel:false});
});
board3.create('line', [[0, 21502.4801962], [50, 149696.292399]]);
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
Ahora bien, ¿y si quisiéramos hacer predicciones de los precios de
las vivienda no sólo en función de los metros cuadrados sino también, por ejemplo, de su antiguedad en años?
¿y si queremos agregar muchas más variables predictoras?&lt;/p&gt;

&lt;p&gt;En el próximo post trataré de explicar las mates que hay detrás de la generalización a múltiples dimensiones a través
del ejemplo más sencillo posible: dos inputs predictores en lugar de uno y su generalización para n inputs. 
Una vez entendida la aproximación al problema general, trataremos de computar la regresión lineal con un sencillo
 script de python, que podremos “alimentar” con cualquier set de datos de entrada y salida.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/machine-learning/2016/12/01/machine-learning-desde-cero-II.html&quot;&gt;Machine learning desde cero (II) - Regresión lineal multidimensional&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/machine-learning/2016/11/14/machine-learning-desde-cero-I.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/machine-learning/2016/11/14/machine-learning-desde-cero-I.html</guid>
        
        <category>ai,</category>
        
        <category>machine</category>
        
        <category>learning,</category>
        
        <category>deep</category>
        
        <category>learning,</category>
        
        <category>python,</category>
        
        <category>programming</category>
        
        
        <category>machine-learning</category>
        
      </item>
    
      <item>
        <title>Cómo instalar Laravel en windows y linux</title>
        <description>&lt;h2 id=&quot;introducción&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Laravel es un framework tan completo y fácil de extender que sólo es necesario un conocimiento básico y superficial de programación PHP para usarlo. Sin embargo, la instalación de Laravel puede llegar a ser un reto.&lt;/p&gt;

&lt;p&gt;Laravel requiere, tanto en entorno de producción como de desarrollo, la habilitación de servidores http, MySQL y PHP y cierto cariño extra: instalar o habilitar módulos de PHP adicionales, configurar hosts virtuales en apache o nuevos sites en nginx y otros detalles por el estilo que son relativamente sencillos de resolver sólo si ya lo has hecho antes alguna vez.&lt;/p&gt;

&lt;p&gt;Por suerte existe una manera alternativa de instalar Laravel que nos permite ahorrarnos toda esa configuración pormenorizada de servidores. Esta alternativa es ideal tanto para newbies como para expertos, puesto que permite crear en cuestión de segundos entornos de desarrollo optimizados para correr Laravel.&lt;/p&gt;

&lt;p&gt;Esta guía está dirigida a instalar Laravel en Windows y Linux, ya que estos dos sistemas comparten este mismo método de instalación. Bienvenido/a a “Cómo instalar Laravel en Windows y Linux sin tener ni #$?%!&amp;amp; idea de nada”.&lt;/p&gt;

&lt;h2 id=&quot;vocabulario&quot;&gt;Vocabulario&lt;/h2&gt;

&lt;p&gt;Antes de proceder a la instalación, una pequeña guía sobre qué es cada cosa:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Laravel&lt;/strong&gt;: framework PHP que nos permite desarrollar aplicaciones web, APIs y webs de toda la vida, ofreciéndonos soluciones estables y elegantes a problemas cotidianos (autenticación de usuarios, bases de datos, seguridad…).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Composer&lt;/strong&gt;: Gestor de dependencias PHP, gratuito y de código abierto. Básicamente nos permite obtener cualquier paquete desarrollado en PHP (como Laravel).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VirtualBox&lt;/strong&gt;: programa gratuito mantenido por Oracle para crear máquinas virtuales que nos permiten correr cualquier sistema operativo y programa sin necesidad de modificar (ni poner en riesgo) nuestra máquina “real”.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Vagrant&lt;/strong&gt;: Herramienta gratuita y de código abierto que nos permite gestionar máquinas virtuales pre-configuradas desde la terminal o línea de comandos. Estas máquinas virtuales pre-configuradas se han venido a llamar Vagrant &lt;strong&gt;boxes&lt;/strong&gt;. La idea detrás de esta herramienta es que la gente pueda instalar y compartir máquinas virtuales con sistemas operativos y software pre-instalado y pre-configurado, es decir, que los usuarios puedan empezar a usar las máquinas virtuales desde el primer momento.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Laravel Homestead&lt;/strong&gt;: Homestead viene a ser una Vagrant box de Laravel, es decir, una máquina virtual pre-configurada que puede empezar a usarse tan pronto la activamos, prácticamente sin configuración adicional.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leyendo lo que es cada cosa quizá te hayas hecho ya una idea de cómo vamos a instalar laravel de la forma más sencilla imaginable, estos son los pasos:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Instalar Composer&lt;/li&gt;
  &lt;li&gt;Instalar Laravel en una carpeta local de nuestro sistema&lt;/li&gt;
  &lt;li&gt;Instalar VirtualBox y Vagrant&lt;/li&gt;
  &lt;li&gt;Instalar Homestead&lt;/li&gt;
  &lt;li&gt;Configuración mínima de Homestead y a disfrutar&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¡Eso es todo! Cinco pasitos, cuatro instalaciones prácticamente automáticas y una configuración que es cambiar cuatro o cinco líneas en un fichero de nada… Si esto no lo puede hacer cualquiera, me corto una pierna a bocados. Vayamos al lío:&lt;/p&gt;

&lt;h2 id=&quot;paso-1-instalar-composer&quot;&gt;Paso 1: Instalar Composer&lt;a name=&quot;paso1&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si usas Windows estás de suerte. Sólo tienes que bajarte e instalar el instalador oficial de composer: &lt;a href=&quot;https://getcomposer.org/Composer-Setup.exe&quot; target=&quot;_blank&quot;&gt;Composer-Setup.exe&lt;/a&gt;. El instalador te añadirá el comando &lt;em&gt;composer&lt;/em&gt; a tu PATH de Windows, así que podrás usarlo desde cualquier terminal que abras a partir de ahora. Pan comido. Ya puedes pasar al &lt;a href=&quot;#paso2&quot;&gt;paso 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si usas Linux vas a tener que trabajártelo un poquito más. Necesitarás instalar en tu sistema linux los siguientes paquetes: &lt;code&gt;curl&lt;/code&gt; para bajarte el instalador de Composer desde la línea de comandos, &lt;code&gt;php5-cli&lt;/code&gt; para poder ejecutarlo y &lt;code&gt;git&lt;/code&gt;, que además de un gestor de repositorios es una dependencia de Composer. En definitiva,utiliza tu gestor de paquetes linux favorito e instala los tres paquetes. Desde Ubuntu y similares, por ejemplo, haríamos lo siguiente:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install curl php5-cli git &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sigue los pasos, confirma lo que haya que confirmar (con cariño) y una vez tengas los tres paquetes instalados, podrás bajarte y ejecutar el instalador de composer con el siguiente comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -sS https://getcomposer.org/installer &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sudo php -- --install-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin --filename&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;composer&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este comando hace dos cositas: instala composer y crea una copia de composer.phar en &lt;code&gt;/usr/local/bin/composer&lt;/code&gt;, lo que nos permite ejecutar el comando &lt;code&gt;composer&lt;/code&gt; desde cualquier terminal de nuestro sistema a partir de ahora. Pues eso es todo, ya tenemos instalado Composer en nuestro Linux, pasemos al siguiente paso.&lt;/p&gt;

&lt;h2 id=&quot;paso-2-instalar-laravel&quot;&gt;Paso 2: Instalar Laravel&lt;a name=&quot;paso2&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ya que tenemos instalado Composer, vamos a hacernos el favor de utilizarlo. En primer lugar vamos a bajarnos y a hacer accesible desde cualquier punto de nuestra terminal el instalador de Laravel:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;composer global require &lt;span class=&quot;s2&quot;&gt;&amp;quot;laravel/installer=~1.1&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ahora que tenemos este fantástico instalador de Laravel a mano, navega desde terminal hasta tu directorio de proyectos (o crea un nuevo directorio donde generar nuevos proyectos en el futuro). Una vez en la raíz de este directorio ejecuta:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;laravel new nombre-de-tu-proyecto&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este sencillo comando creará un nuevo directorio con el nombre de tu proyecto, en el que bajará una copia de la última versión estable de Laravel, lista para empezar a desarrollar.&lt;/p&gt;

&lt;p&gt;¿Pero de qué sirve desarrollar, es decir, editar y crear ficheros dentro del framework de Laravel, si no podemos ver los cambios que vamos haciendo? Es necesario, por tanto, instalar un entorno de desarrollo adecuado, capaz de servir Laravel y mostrarnos en cualquier navegador los cambios que vamos realizando. Pasemos, por tanto, al Paso 3.&lt;/p&gt;

&lt;h2 id=&quot;paso-3-instalar-virtualbox-y-vagrant&quot;&gt;Paso 3: Instalar VirtualBox y Vagrant&lt;/h2&gt;

&lt;p&gt;VirtualBox y Vagrant son programas gratuitos tan fáciles de instalar como cualquier otro.&lt;/p&gt;

&lt;p&gt;En Windows basta con que te bajes y ejecutes el instalador para las últimas versiones de VirtualBox y Vagrant desde sus respectivas páginas oficiales de descarga &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot;&gt;aquí (VirtualBox)&lt;/a&gt; y &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot;&gt;aquí (Vagrant)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para Linux basados en Debian (como Ubuntu) bájate e instala los ficheros .deb de cada programa. También los encontrarás en las páginas oficiales de descarga, la específica para Linux de VirtualBox &lt;a href=&quot;https://www.virtualbox.org/wiki/Linux_Downloads&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt; y la de Vagrant &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yo, que uso Ubuntu, suelo hacer lo siguiente con cada uno de los paquetes .deb que me bajo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dpkg -i nombre-del-paquete.deb
sudo apt-get install -f&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Eso es todo, ya tenemos en nuestro sistema VirtualBox y Vagrant. Casi tan fácil como robarle un chupete a un bebé. Vayamos al cuarto paso.&lt;/p&gt;

&lt;h2 id=&quot;paso-4-instalar-homestead&quot;&gt;Paso 4: Instalar Homestead&lt;/h2&gt;

&lt;p&gt;La manera más sencilla de instalar Laravel Homestead es echando mano de Composer. Como ya lo tenemos instalado, esto va a ser coser y cantar. Ejecuta:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;composer global require &lt;span class=&quot;s2&quot;&gt;&amp;quot;laravel/homestead=~2.0&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este comando creará una copia del ejecutable homestead dentro de &lt;code&gt;~/.composer/vendor/bin&lt;/code&gt;, que debería ser accesible a partir de ahora desde cualquier terminal de tu sistema. Si no es así, asegúrate de que ese directorio está en el PATH de tu sistema.&lt;/p&gt;

&lt;p&gt;Ahora que ya tenemos Homestead instalado, podemos pasar al último paso&lt;/p&gt;

&lt;h2 id=&quot;paso-5-configuración-mínima-de-homestead&quot;&gt;Paso 5: Configuración mínima de Homestead&lt;/h2&gt;

&lt;p&gt;Para poder comunicarte de forma segura y sin necesidad de passwords con la máquina virtual que crearemos en breve, necesitarás crear un par de claves privada/pública SSH (si no las tienes ya). En Linux esto suele ser tan fácil como ejecutar el comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh-keygen -t rsa -C &lt;span class=&quot;s2&quot;&gt;&amp;quot;un-nombre-de-usuario@homestead&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sigue los pasos que aparecerán y recuerda tanto el nombre de la clave (que podrás elegir o dejar uno por defecto, normalmente &lt;code&gt;id_rsa&lt;/code&gt;) como el directorio donde se ha guardado, normalmente en &lt;code&gt;~/.ssh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;En Windows necesitarás bajarte un generador de claves, como por ejemplo PuTTYgen, disponible &lt;a href=&quot;https://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;, generar la clave y guardarla en cualquier directorio seguro de tu sistema. Recuerda el nombre y el directorio donde guardes el par de claves.&lt;/p&gt;

&lt;p&gt;Una vez tenemos listas nuestras claves SSH pasemos a inicializar Homestead y a configurarlo con cariño. Ejecuta el siguiente comando para crear en tu sistema los ficheros de configuración de Homestead que editaremos a continuación:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;homestead init&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este comando creará el fichero &lt;code&gt;Homestead.yaml&lt;/code&gt; dentro del directorio &lt;code&gt;~/.homestead&lt;/code&gt;. Edita ese fichero con tu editor de texto o IDE favorito, te aparecerán una serie de opciones de configuración de Homestead, las únicas que es necesario modificar son las siguientes:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;authorize: directorio-donde-está-tu-clave-pública/nombre-de-tu-clave-pública

keys:
    - directorio-donde-está-tu-clave-privada/nombre-de-tu-clave-privada

folders:
    - map: directorio-donde-están-tus-proyectos
      to: /home/vagrant/nombre-del-directorio-donde-están-tus-proyectos

sites:
    - map: nombre-de-tu-proyecto.app
      to: /home/vagrant/nombre-del-directorio-donde-están-tus-proyectos/nombre-de-tu-proyecto/public&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A modo de referencia, dejo por aquí un ejemplo completo de Homestead.yaml editado en un sistema Linux:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;---
ip: &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.10.10&amp;quot;&lt;/span&gt;
memory: 2048
cpus: 1
provider: virtualbox

authorize: ~/.ssh/id_rsa.pub

keys:
    - ~/.ssh/id_rsa

folders:
    - map: ~/WebDev
      to: /home/vagrant/WebDev

sites:
    - map: menuvel.app
      to: /home/vagrant/WebDev/menuvel/public

databases:
    - homestead

variables:
    - key: APP_ENV
      value: &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Puedes editar el resto de líneas a conveniencia, aunque no es estrictamente necesario. En cualquier caso, acuérdate del valor de las líneas &lt;code&gt;ip&lt;/code&gt; y &lt;code&gt;map&lt;/code&gt; (dentro de sites).&lt;/p&gt;

&lt;p&gt;Es muy conveniente agregar ese par de valores al fichero hosts de nuestro sistema, que encontrarás normalmente dentro del directorio &lt;code&gt;/etc&lt;/code&gt; (en Linux) o &lt;code&gt;C:\Windows\System32\drivers\etc&lt;/code&gt; (en Windows). Abre el fichero hosts con tu editor de texto o IDE favorito y agrega en una línea el par de valores. Según el ejemplo que puse antes, agregaríamos la línea:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;192.168.10.10   menuvel.app&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Esto nos permite vincular la IP de nuestra máquina virtual a la dirección &lt;code&gt;menuvel.app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;¡Eso es todo! Ahora ya podemos ejecutar nuestra máquina virtual pre-configurada y lista para correr Laravel. Tan sólo has de escribir en tu línea de comandos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;homestead up&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Una vez que Homestead acabe de hacer su magia (la primera vez puede que tarde un poquito) podrás acceder a tu proyecto a través de cualquier navegador escribiendo la dirección que indicaste en sites, en el ejemplo sería &lt;code&gt;http://menuvel.app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;¡Ya hemos terminado! Lo mejor de todo es que ahora puedes editar los ficheros de tu proyecto Laravel (el que creamos durante el Paso 2) y automáticamente se sincronizarán en Homestead, con lo que podrás ir viendo los cambios que vayas haciendo en tu proyecto de forma inmediata.&lt;/p&gt;

&lt;p&gt;Otros comandos básicos de Homestead:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Si decides hacer algún cambio en Homestead.yaml, debes ejecutar &lt;code&gt;homestead provision&lt;/code&gt; para actualizar Homestead con los nuevos cambios en su configuración.&lt;/li&gt;
  &lt;li&gt;Para cerrar Homestead y terminar la ejecución de la máquina virtual puedes utilizar el comando &lt;code&gt;homestead destroy&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Espero que la instalación de Laravel siguiendo estos pasos te haya parecido la mar de sencilla y que puedas dedicar tu tiempo a estudiar el framework y crear nuevas aplicaciones web en lugar de perderlo gestionando servidores. Si te surge alguna duda, detectas algún error o crees que me he dejado algún dato importante, deja tu comentario más abajo.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Aug 2016 00:00:00 +0200</pubDate>
        <link>http://mitxelmoriana.com/laravel/2016/08/02/como-instalar-laravel-con-homestead-en-linux-y-windows.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/laravel/2016/08/02/como-instalar-laravel-con-homestead-en-linux-y-windows.html</guid>
        
        <category>web,</category>
        
        <category>web</category>
        
        <category>development,</category>
        
        <category>laravel,</category>
        
        <category>php,</category>
        
        <category>framework</category>
        
        
        <category>laravel</category>
        
      </item>
    
      <item>
        <title>Bash script: youtube-autodl</title>
        <description>&lt;p&gt;Dejo por aquí un bash script que nos permite bajar el contenido audiovisual de un montón de webs como youtube, con tan sólo copiar la URL, es decir, hacer CTRL+C (o botón derecho y copiar) una vez tenemos seleccionada la URL que nos interesa.&lt;/p&gt;

&lt;p&gt;El script asume que tienes instalado youtube-dl y xclip, así como sus respectivas dependencias.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;youtube-dl&lt;/strong&gt; es un programa de línea de comandos escrito en python que nos permite rastrear y bajar los recursos audiovisuales de múltiples webs. El programa está en permanente actualización y es compatible con gran parte de las webs de contenidos multimedia más conocidas del mundo. &lt;strong&gt;xclip&lt;/strong&gt; es el programa que nos permite interactuar desde la línea de comandos con el clipboard de nuestro sistema linux.&lt;/p&gt;

&lt;h2 id=&quot;cómo-funciona&quot;&gt;¿Cómo funciona?&lt;/h2&gt;

&lt;p&gt;Copia el código y guárdalo en un nuevo fichero llamado (por ejemplo) &lt;strong&gt;youtube-autodl.sh&lt;/strong&gt;. Pon el fichero, con permisos de ejecución, en la carpeta donde deseas descargar los contenidos. Edita el código con el número máximo de subprocesos de download que quieres que se ejecuten paralelamente. A continuación ejecuta el script escribiendo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./youtube-autodl&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mientras el script permanezca en ejecución, se mantendrá a la espera de que selecciones y copies nuevas URLs, de las que tratará de bajarse los contenidos audiovisuales que encuentre. Si alcanzas el número máximo de downloads paralelos, añadirá las nuevas URLs que copies a una cola de URLs y las usará tan pronto termine alguno de los downloads en curso.&lt;/p&gt;

&lt;h2 id=&quot;el-script&quot;&gt;El script&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##########################################################&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Run youtube-dl for each URL copied to system&amp;#39;s clipboard&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##########################################################&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Dependencies: youtube-dl, xclip&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Author: Mitxel Moriana &amp;lt;moriana.mitxel@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# GPLv3 &amp;lt;https://www.gnu.org/licenses/gpl-3.0.en.html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##########################################################&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Exit on error&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set max concurrent downloads:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxParallelDownloads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set your download path:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;downloadPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$HOME/Descargas/Auto&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ! -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;$downloadPath&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt; 	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[ERROR] Download directory $downloadPath not found.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt; 	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bye bye&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt; 	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;getClipCmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;xclip -selection clipboard -o&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;copiedURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set the parallel downloads counter&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;mktemp &lt;span class=&quot;s2&quot;&gt;&amp;quot;$HOME/.counter.XXXXXX&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0\n&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$counter&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set counter to 0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Quit execution&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; quit&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -t &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; stty sane&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Clear terminal options before exit&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bye bye&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Verifies that a given string has a proper URL format&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; verifyURL&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;(https?|ftp|file)://[-A-Za-z0-9\+&amp;amp;@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&amp;amp;@#/%=~_|]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~ &lt;span class=&quot;nv&quot;&gt;$regex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Calls quit() on CTRL+C&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trap &lt;/span&gt;quit INT
&lt;span class=&quot;lineno&quot;&gt;48&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Waiting for copied URLs... (press q or CTRL+C to exit)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;50&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;51&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Set terminal options to non blocking key read&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;52&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -t &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; stty -echo -icanon -icrnl &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; min 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;53&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;54&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Clear clipboard&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;55&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;not a URL&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xclip 
&lt;span class=&quot;lineno&quot;&gt;56&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;57&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lastKeypress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;58&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x$lastKeypress&amp;quot;&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;xq&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Exit the loop on &amp;quot;q&amp;quot; keypress&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;59&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;60&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;currentDownloads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&amp;lt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$counter&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;61&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; -ne &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$currentDownloads&amp;quot;&lt;/span&gt; -lt &lt;span class=&quot;s2&quot;&gt;&amp;quot;$maxParallelDownloads&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;62&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; ++currentDownloads &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;63&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$currentDownloads&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$counter&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;64&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;tryURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[0]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;65&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${queue[@]:1}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;66&lt;/span&gt;         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Downloading media from $tryURL (&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; URLs left in queue)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;67&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;68&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;69&lt;/span&gt;             	&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$downloadPath&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;70&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;downloadResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; youtube-dl &lt;span class=&quot;s2&quot;&gt;&amp;quot;$tryURL&amp;quot;&lt;/span&gt; 2&amp;gt; /dev/null &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tail -1 &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;71&lt;/span&gt;                 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$downloadResult&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; *&lt;span class=&quot;s2&quot;&gt;&amp;quot;[download] 100% of&amp;quot;&lt;/span&gt;* &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;72&lt;/span&gt;                     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[SUCCESS] Finished downloading media from $tryURL&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;73&lt;/span&gt;                 &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$downloadResult&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; *&lt;span class=&quot;s2&quot;&gt;&amp;quot;[download]&amp;quot;&lt;/span&gt;* &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;74&lt;/span&gt;                     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[ERROR] Unexpected interruption while downloading media from $tryURL&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;75&lt;/span&gt;                 &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;76&lt;/span&gt;                     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[ERROR] Unable to download media from $tryURL&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;77&lt;/span&gt;                 &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;78&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;79&lt;/span&gt;             &lt;span class=&quot;nv&quot;&gt;currentDownloads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&amp;lt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$counter&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;80&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; --currentDownloads &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;81&lt;/span&gt;             &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$currentDownloads&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$counter&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;82&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Make subprocess run in parallel&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;83&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;84&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;85&lt;/span&gt; 	&lt;span class=&quot;nv&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$getClipCmd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;86&lt;/span&gt; 	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$temp&amp;quot;&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$copiedURL&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; verifyURL &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;87&lt;/span&gt; 	    &lt;span class=&quot;nv&quot;&gt;copiedURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$temp&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;88&lt;/span&gt; 	    queue+&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$copiedURL&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;89&lt;/span&gt; 	    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;URL $copiedURL added to download queue (&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; URLs in queue)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;90&lt;/span&gt; 	&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;91&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;92&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# Ensure we only get one (1) keypress&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;93&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;lastKeypress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;`dd bs=1 count=1 status=none | cat -v`&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;94&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;95&lt;/span&gt; 	sleep 0.2
&lt;span class=&quot;lineno&quot;&gt;96&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;97&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;98&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;99&lt;/span&gt; quit&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;aviso-probablemente-innecesario&quot;&gt;Aviso probablemente innecesario&lt;/h2&gt;

&lt;p&gt;No me hago responsable de los daños causados por el uso de este script, incluyendo, aunque no de forma exclusiva: que no funcione, que te explote el PC, que haga algo que no te guste, que te perjudique algún fichero, que te abduzcan los extraterrestres, que invoque a un espíritu del averno o que te deje tu pareja.&lt;/p&gt;

&lt;p&gt;Como norma general, no ejecutes nada sin saber previamente lo que hace. Aún menos si te lo pide alguien por internet.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jul 2016 00:00:00 +0200</pubDate>
        <link>http://mitxelmoriana.com/bash/2016/07/27/bash-script-para-bajarse-media-a-partir-de-urls.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/bash/2016/07/27/bash-script-para-bajarse-media-a-partir-de-urls.html</guid>
        
        <category>bash</category>
        
        <category>script,</category>
        
        <category>programming,</category>
        
        <category>bash,</category>
        
        <category>shell,</category>
        
        <category>sh,</category>
        
        <category>youtube-dl,</category>
        
        <category>jdownloader,</category>
        
        <category>downloader,</category>
        
        <category>audio,</category>
        
        <category>videos</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Introducción al control de versiones con Git</title>
        <description>&lt;h2 id=&quot;qué-es-el-control-de-versiones&quot;&gt;¿Qué es el control de versiones?&lt;/h2&gt;

&lt;p&gt;Durante el desarrollo e incluso durante toda la vida de cualquier programa de software se requiere de escribir o corregir código continuamente, ya sea para publicar nuevas versiones mejoradas o con nuevas funcionalidades o por necesidad de corrección de errores (bug fixes).&lt;/p&gt;

&lt;p&gt;Ocurre que en todo tipo de proyectos de desarrollo de software se acaban generando decenas, cientos, miles de ficheros de código y, de una versión a otra se han de modificar unos cuantos de ellos. Sería extremadamente laborioso llevar la cuenta, manualmente, de las líneas de código que se han modificado de una versión a otra. Si además, sobre el mismo código fuente, están trabajando equipos de desarrolladores, imagínate lo complejo que sería coordinar los cambios realizados por dos, tres… decenas de programadores sobre los mismos ficheros. La implementación de nuevas versiones llevaría horas o incluso días dedicados exclusivamente a la revisión y coordinación de cambios en el código.&lt;/p&gt;

&lt;p&gt;De ahí que sean necesarios sistemas de gestión de cambios o lo que se ha venido a conocer como Sistemas de Control de Versiones (VCS, en inglés), que básicamente consisten en estrategias (y software) que habilitan para realizar esa gestión de cambios.&lt;/p&gt;

&lt;h2 id=&quot;qué-es-eso-de-git&quot;&gt;¿Qué es eso de Git?&lt;/h2&gt;

&lt;p&gt;Git es un programa para control de versiones. No es el único ni necesariamente el mejor en todo. Hay docenas de sistemas de gestión de versiones por ahí: algunos son de pago, otros gratuitos, unos afrontan la problemática de editar los mismos fichero por distintas personas de una manera, otros de otra… No nos interesa demasiado entrar en detalle ni compararlos en este post, aunque si te pica la curiosidad siempre puedes echar un vistacillo por &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_version_control_software&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yo te voy a introducir a Git por la sencilla razón de que, junto con Mercurial, es el VCS más popular con diferencia (o eso me parece a mí). Además, sabiendo más o menos de qué va Git, la terminología y los conceptos generales (merge, branch, pull, push…), aprender a hacer lo mismo con un otro VCS no puede ser muy complicado.&lt;/p&gt;

&lt;h2 id=&quot;git-básico-básico&quot;&gt;Git básico, básico&lt;/h2&gt;

&lt;p&gt;Como decía un compañero mío de universidad: “para aprender a andar primero hay que aprender a gatear”, y como para aprender a gatear primero hay que nacer, qué mejor que empezar por el principio de todo: la instalación de git.&lt;/p&gt;

&lt;h3 id=&quot;nacer-instalar-git-en-tu-ordenador&quot;&gt;Nacer: instalar Git en tu ordenador&lt;/h3&gt;

&lt;p&gt;Básicamente si usas Linux lo puedes instalar con tu gestor de paquetes habitual:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install git-all&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;O, alternativamente:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo yum install git-all&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si usas Mac te lo puedes bajar de &lt;a href=&quot;http://git-scm.com/download/mac&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;. Si usas Windows te puedes bajar el instalador &lt;a href=&quot;http://git-scm.com/download/win&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si necesitas más detalles sobre cómo instalarlo, problemas, casos especiales… ya sabes que Google es tu amigo. También puedes preguntar más abajo e intentaré ayudarte.&lt;/p&gt;

&lt;p&gt;Si todo ha ido bien cuando escribas en tu terminal el comando &lt;em&gt;git version&lt;/em&gt;, debería devolverte la versión del Git que has instalado en tu SO. Por ejemplo, en mi Ubuntu a mí me aparece:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git version
git version 2.7.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mientras que en la versión de Git para mi Windows me aparece&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; version
git version &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.windows.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;aprendiendo-a-gatear-usar-git-en-tu-entorno-local&quot;&gt;Aprendiendo a gatear: usar Git en tu entorno local&lt;/h3&gt;

&lt;p&gt;La gracia de los sistemas de control de versiones (VCS) está, sobretodo, en la gestión de repositorios remotos, a los cuales puede acceder un equipo de desarrolladores (repositorios privados) o incluso cualquier persona que desee colaborar en el desarrollo de un proyecto de código abierto (repositorios públicos). Los repositorios son, sencillamente, los lugares donde se guarda el código de nuestro proyecto, donde se coordinan y se registran los cambios que se van haciendo (qué cambios se han hecho, quién los ha hecho, cuándo…).&lt;/p&gt;

&lt;p&gt;Pero qué mejor manera de aprender a trabajar con repositorios remotos que aprendiendo primero a trabajar con las versiones de nuestro propio código en nuestro entorno local.&lt;/p&gt;

&lt;p&gt;Por aquello de aprender practicando, vamos a crear un fichero de texto vacío en una nueva carpeta. El fichero de texto vacío representa un programa que iremos modificando para simular lo que serían modificaciones en la aplicación de verdad,&lt;/p&gt;

&lt;p&gt;En mi Windows yo he creado una nueva carpeta en c:\myFakeProject\ y he creado dentro un nuevo fichero .txt vacío con el nombre &lt;em&gt;thisIsAnAppYouBetterBelieveIt.txt&lt;/em&gt;. Ahora abramos nuestra magnífica aplicación con apariencia de fichero de texto vacío con cualquier editor de texto (notepad, gedit o cualquier editor sencillo y rápido que tengas más a mano).&lt;/p&gt;

&lt;p&gt;Escribamos alguna nueva línea de “código”, por ejemplo: “Hola mundo!”. Ahora borra la palabra “mundo” y sustitúyela por “Paco”. Guarda y cierra el fichero.&lt;/p&gt;

&lt;p&gt;Imagínate que en vez de un .txt se trata de una aplicación de verdad y que, por error, modificaste la línea hace unas semanas. Te tocaría perder un tiempo precioso buscando la modificación (“Paco” por “mundo”)que introdujiste sin querer.&lt;/p&gt;

&lt;p&gt;Bien, vamos a poner solución a este problema con nuestro Git, nuestro flamante nuevo sistema de control de versiones. Comprueba que en tu terminal o línea de comandos estés en el directorio raíz de tu proyecto. En mi caso c:\myFakeProject\ y escribe&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git init&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este comando creará una nueva carpeta oculta /.git en la raíz de tu proyecto, donde Git guarda toda la información local del estado pasado y actual del código. De hecho, acabas de estrenar un sistema de control de versiones para tu nuevo proyecto. ¡Felicidades!&lt;/p&gt;

&lt;p&gt;Siempre que queramos saber en qué estado se encuentra nuestro espacio de trabajo (que por defecto incluye el subdirectorio donde hemos inicializado git y todos sus subdirectorios), debemos escribir:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git status&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hazlo y te aparecerán cuatro o cinco líneas de información, entre las cuales encontrarás referencias a los siguientes asuntos importantes (que en principio te sonarán a checo antiguo):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La rama o branch sobre la que estás trabajando, por ejemplo “On branch &lt;strong&gt;master&lt;/strong&gt;”&lt;/li&gt;
  &lt;li&gt;El commit o confirmación en cabeza (current HEAD commit). Por ejemplo: “Initial commit” (aún no has hecho ningún commit)&lt;/li&gt;
  &lt;li&gt;Una lista de ficheros con cambios respecto al último commit (como no has hecho ningún cambio desde el git init, no debería aparecer nada de esto ahora).&lt;/li&gt;
  &lt;li&gt;Una lista de ficheros que están untracked (ficheros que Git no está controlando). Estos suelen ser ficheros que acabas de crear, como el fichero .txt de nuestro ejemplo. Si te fijas, el nombre de tu .txt de ejemplo debería aparecerte en pantalla después de “Untracked files:”.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bien, vayamos por partes. ¿Qué es eso de la branch? Una &lt;strong&gt;branch&lt;/strong&gt; o rama es una ramificación en el seguimiento de las modificaciones del código. Suponte que tú y otro desarrollador tenéis que trabajar sobre la misma aplicación y que no queréis tener que estar constantemente actualizando vuestra entorno de trabajo local con los cambios que realiza cada uno, a diario, sobre la misma rama. Una manera de trabajar en estos casos podría ser, por ejemplo, crear una rama nueva para cada desarrollador, que más tarde, al cabo de unos días, se fusionarán en una sola rama, es decir, se integrarán los dos cambios hechos por separado en una sola rama. A esto de fusionar ramas se le conoce como &lt;strong&gt;merge&lt;/strong&gt;. Sobre branching y merging hablaremos en el próximo post, por ahora basta con que te suene.&lt;/p&gt;

&lt;p&gt;¿Qué es eso del commit? Un &lt;strong&gt;commit&lt;/strong&gt; o confirmación es la forma de decir con Git “confirmo los cambios que he hecho hasta ahora porque he terminado con este asunto y el asunto está resuelto”. Suponte que estás corrigiendo un error y modificas cinco ficheros de tu proyecto. Cuando acabas de modificarlo, testeas la aplicación y todo funciona como tú esperas: puedes dar por terminado el arreglo. Es muy buena idea, entonces, hacer un commit y ponerle un titulillo hermosamente explicativo como por ejemplo “fixed bug #6576”.&lt;/p&gt;

&lt;p&gt;Podemos hacer lo mismo si acabamos de crear un proyecto o acabamos de crear nuevos ficheros dentro del proyecto. ¡De hecho, este es el caso en el que estamos ahora!. Si intentas hacer un commit ahora, sin embargo, te aparecerá un mensajito preocupante, pruébalo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;My first commit&amp;quot;&lt;/span&gt;
...
nothing added to commit but untracked files present&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nada se ha añadido en nuestro commit. La razón es porque Git tiene un sistema de dos pasos para realizar el commit: el primer paso se llama &lt;strong&gt;stage&lt;/strong&gt; o puesta en escena y el segundo, es el commit o confirmación, propiamente. Es decir, primero debemos selecionar cuáles de los cambios realizados queremos poner en escena y preparar para un mismo commit, y luego los hemos de comitear, lo que equivale a reunir todos los cambios bajo una misma confirmación, a razón de que, por ejemplo, son cambios que solucionan un problema en común.&lt;/p&gt;

&lt;p&gt;Vamos pues a &lt;em&gt;stagear&lt;/em&gt; los cambios realizados y luego realizar el commit. El staging se hace con el commando &lt;em&gt;git add&lt;/em&gt;. Por ejemplo, nosotros podemos escribir:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git add thisIsAnAppYouBetterBelieveIt.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ahora haz un &lt;em&gt;git status&lt;/em&gt;. Deberías ver una diferencia importante respecto al principio. Ya no aparecen ficheros &lt;em&gt;untracked&lt;/em&gt; en tu espacio de trabajo, en su lugar aparece una nueva línea como ésta tras &lt;em&gt;Changes to be committed&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;new file:   thisIsAnAppYouBetterBelieveIt.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lo que significa que nuestro fichero está listo para ser confirmado, es decir, para ser incluido en el próximo commit que hagamos. Vamos allá:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;My first commit&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;¡Felicidades por tu primer commit!. Ahora volvamos a hacer un &lt;em&gt;git status&lt;/em&gt;. Git nos dirá esta vez que nuestro espacio de trabajo está libre de nuevas modificaciones desde el último commit (claro, lo acabamos de hacer).&lt;/p&gt;

&lt;p&gt;Bien, modifiquemos ahora nuestro querido fichero .txt. Ábrelo y cambia, por ejemplo, “Paco” por “Pedro”. Ahora guarda y sal de tu editor de texto. Volvamos a la línea de comandos. Haz un &lt;em&gt;git status&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ahora debería informarte Git de que has modificado un fichero respecto al commit que tienes en cabeza (en nuestro caso, respeto al último commit realizado). Si quieres comprobar la modificación realizada escribe:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git diff&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Y debería aparecerte algo como esto&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;diff --git a/thisIsAnAppYouBetterBelieveIt.txt b/thisIsAnAppYouBetterBelieveIt.txt
index 5d8a8b4..4955b9f 100644
--- a/thisIsAnAppYouBetterBelieveIt.txt
+++ b/thisIsAnAppYouBetterBelieveIt.txt
@@ -1 +1 @@
-Hola Paco
&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;No newline at end of file
+Hola Pedro
&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;No newline at end of file&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para salir de la pantalla de visualización de cambios pulsa la tecla “q”.&lt;/p&gt;

&lt;p&gt;Fíjate que git nos informa de los cambios que se han realizado, incluyendo las líneas del fichero donde se han realizado. En este caso nos informa de las diferencias que existen entre el estado actual de nuestro código (que aún no están &lt;em&gt;staged&lt;/em&gt; ni &lt;em&gt;committed&lt;/em&gt;) y los cambios entre la cabecera de la rama actual (en nuestro caso, respecto al último commit que hicimos).&lt;/p&gt;

&lt;p&gt;Al igual que cuando creamos un fichero, cuando modificamos uno existente debemos hacer un &lt;em&gt;staging&lt;/em&gt; de los cambios previamente al &lt;em&gt;commit&lt;/em&gt;. Por suerte, no tienes que memorizar ningún nuevo comando porque todo tipo de staging se hace, al igual que antes, con &lt;em&gt;git add&lt;/em&gt;, ¡también en el caso de eliminar ficheros o cambiarles el nombre!:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git add thisIsAnAppYouBetterBelieveIt.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A continuación escribe:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;I changed the name for the lulz&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Perfecto, en tu segundo commit has confirmado el cambio del nombre en esa línea de código.&lt;/p&gt;

&lt;p&gt;¿Y si creo 200 ficheros, elimino 100 y modifico 500? ¿Tengo que hacer el staging uno a uno? Y la respuesta es que no. Aquí te dejo unos comandos muy útiles que te servirán para hacer el staging de cambios de múltiples ficheros al mismo tiempo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git add .     &lt;span class=&quot;c&quot;&gt;# Staging de todos los ficheros modificados o recién creados (sin los eliminados)&lt;/span&gt;
git add -A    &lt;span class=&quot;c&quot;&gt;# Staging de todos los ficheros modificados, eliminados o recién creados&lt;/span&gt;
git add -u    &lt;span class=&quot;c&quot;&gt;# Staging de todos los ficheros modificados o eliminados (sin los nuevos)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;No te olvides de hacer el commit después de hacer el staging si estás contento con los cambios realizados. Puedes pensar en el staging como un paso previo en el que valorar cuáles de los cambios merecen formar parte de un mismo commit o confirmación. De hecho, en un entorno profesional deberías tomarte bastante en serio lo de realizar un commit o, dicho de otro modo, no hagas un commit (y aún menos lo subdas al repositorio remoto) sin estar 100% seguro de que los cambios que has realizado son (prácticamente) los definitivos para resolver el asunto que te traes entre manos.&lt;/p&gt;

&lt;p&gt;De todos modos no sufras demasiado si cometes un error al estilo “se me olvidó modificar este fichero”. Siempre puedes hacer nuevos commits corrigiendo errores o, incluso, enmendar el último commit realizado escribiendo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git add fichero_que_se_me_olvidó_modificar
git commit --ammend&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Esto sustituirá el último commit realizado por un commit idéntico pero que incluirá el fichero que olvidaste modificar/crear/eliminar.&lt;/p&gt;

&lt;p&gt;Otro comando que te puede ser útil es el opuesto al &lt;em&gt;git add&lt;/em&gt;, es decir, el que utilizamos para hacer lo opuesto al stage de un fichero. Este comando podría serte útil si deseas hacer un &lt;em&gt;commit&lt;/em&gt; sólo con algunos ficheros modificados y te has equivocado y los has &lt;em&gt;stageado&lt;/em&gt; todos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git reset HEAD nombre_de_fichero_a_unstagear   &lt;span class=&quot;c&quot;&gt;# Lo contrario de: git add nombre_de_fichero &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Y para el caso de querer hacer un unstage de múltiples ficheros o, mejor dicho, de TODOS los ficheros en estado &lt;em&gt;staged&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git reset   &lt;span class=&quot;c&quot;&gt;# Lo contrario de: git add -A &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En fin, espero que esta introducción te haya servido para empezar a moverte por el mundo de los VCS y, en particular, con Git. Aunque aún no hemos tratado el asunto de los branch y los repositorios remotos piensa que ya estás en el camino de poder hacer un buen control de cambios en el código de tu entorno local.&lt;/p&gt;

&lt;h2 id=&quot;consejillos&quot;&gt;Consejillos&lt;/h2&gt;

&lt;p&gt;Y ahora un par de consejos para facilitarte la vida:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Siempre que comiences un nuevo proyecto, por pequeño y personal que sea, haz el seguimiento de cambios con tu VCS favorito. No subestimes la utilidad de saber los cambios realizados haces meses en un proyecto que tenías abandonado y que vuelves a retomar.&lt;/li&gt;
  &lt;li&gt;En tus proyectos de desarrollo utiliza un IDE compatible con el VCS que utilices. Hay IDEs muy buenos que te permiten automatizar la ejecución de comandos git (como los que acabamos de aprender) o ejecutarlos con un par de clicks.&lt;/li&gt;
  &lt;li&gt;Puedes utilizar alguna interfaz gráfica para git que, como mínimo, te ayudará a visualizar los cambios realizados en los distintos ficheros antes o después de hacer el staging o el commit. Hay montones y muy buenas GUI para todos los SO: GitHub Desktop, SourceTree, git-cola… De nuevo, Google es tu amigo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;próximamente&quot;&gt;Próximamente…&lt;/h2&gt;
&lt;p&gt;En el próximo post sobre Git hablaré de cómo manejar las &lt;em&gt;branches&lt;/em&gt; y cómo intercambiar datos con los repositorios remotos: la auténtica belleza de todo este asuntillo.&lt;/p&gt;

&lt;p&gt;Recuerda que puedes preguntarme sobre cualquier cosa que no te haya quedado clara, sobre errores que te van surgiendo o indicarme correcciones aquí abajo, en el área de comentarios.&lt;/p&gt;

</description>
        <pubDate>Sat, 20 Feb 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/git/2016/02/20/introduccion-al-control-de-versiones-con-git-comandos-basicos-en-entorno-local.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/git/2016/02/20/introduccion-al-control-de-versiones-con-git-comandos-basicos-en-entorno-local.html</guid>
        
        <category>version</category>
        
        <category>control</category>
        
        <category>system,</category>
        
        <category>git,</category>
        
        <category>github,</category>
        
        <category>VCS,</category>
        
        <category>programming</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>La invasión de los frameworks</title>
        <description>&lt;h2 id=&quot;introducción-de-rigor&quot;&gt;Introducción de rigor&lt;/h2&gt;

&lt;p&gt;Hace ya unos días escribí un post sobre &lt;a href=&quot;/web/2016/01/02/estrategias-de-desarrollo-web.html&quot; target=&quot;_blank&quot;&gt;estrategias de desarrollo web&lt;/a&gt; en el que recomendaba escoger diferentes tecnologías de desarrollo web en función del tipo de proyecto al que nos enfrentamos: CMS, frameworks, templates, static site generators… Y mencionaba, de pasada, alguna de las aplicaciones más populares en cada campo.&lt;/p&gt;

&lt;p&gt;Por suerte para el consumidor, cada vez es más sencillo y barato desarrollar sitios webs estándar: gracias a los miles de templates y decenas de CMS disponibles no es necesario tener prácticamente ningún conocimiento técnico para producir casi cualquier tipo de web habitual (portales de noticias, foros, blogs, e-shops, etc.). De hecho, &lt;strong&gt;existen proyectos de AI que prometen diseñar y generar sitios webs automáticamente, sin intervención humana&lt;/strong&gt; más allá de ir agregando contenidos, al respecto véase &lt;a href=&quot;https://thegrid.io/&quot; target=&quot;_blank&quot;&gt;TheGrid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El mundo del desarrollo web, por fuerza, se ha visto empujado o bien hacia el desarrollo de apps, plugins, extensiones o templates para aquellos CMS, o bien hacia áreas mucho más técnicas o especializadas, como por ejemplo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Desarrollo de UI sobresalientes, en el menor tiempo posible y con componentes reutilizables.&lt;/li&gt;
  &lt;li&gt;Desarrollo de web services intermediarios entre aplicaciones existentes o nuevas aplicaciones web para startups o empresas con necesidad de herramientas a medida.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y como es natural, durante los últimos años han venido surgiendo herramientas para agilizar y normalizar el desarrollo en esas áreas de trabajo. Mejor dicho: no es que hayan venido surgiendo herramientas ¡es que se están reproduciendo como conejos! De ahí lo que yo he venido a llamar…&lt;/p&gt;

&lt;h2 id=&quot;la-invasión-de-los-frameworks&quot;&gt;La invasión de los frameworks&lt;/h2&gt;

&lt;p&gt;Ya sea para aplicar al mundo del front end las buenas maneras, abstracción y modularidad típicas del desarrollo back end, como para agilizar el desarrollo web en general y evitar lo de “reinventar la rueda”, los frameworks han venido para hacernos la vida más fácil. A cambio, &lt;em&gt;sólo&lt;/em&gt; nos piden el esfuerzo de estudiar sus particularidades y diferencias (casi na’).&lt;/p&gt;

&lt;p&gt;Existen frameworks de todos los tamaños: desde &lt;strong&gt;full-stack frameworks&lt;/strong&gt; para desarrollar íntegramente cualquier tipo de aplicación web hasta &lt;strong&gt;microframeworks&lt;/strong&gt; destinados a correr servicios web con la mayor velocidad y el menor consumo de recursos posible. Algunos frameworks se centran solamente en el front end o el manejo de las vistas, mientras que otros te permiten el desarrollo integral back y front, a menudo procurando disciplinarte en el uso de arquitecturas Modelo-Vista-Controlador.&lt;/p&gt;

&lt;p&gt;También podemos clasificar los frameworks según los lenguajes de programación en que están escritos o el lenguaje en que debemos escribir nuestras aplicaciones cuando los usamos: PHP, Ruby, Python, Java, Groovy, Scala, JavaScript, CoffeeScript, Perl… you name it.&lt;/p&gt;

&lt;p&gt;La cuestión del lenguaje podría parecer importante a primera vista, pero el hecho es que las webs más populares (wikipedia, youtube, facebook, github, ebay, twitter, netflix…) están escritas usando diferentes lenguajes y por tanto, dejando al margen las preferencias personales, &lt;strong&gt;el lenguaje de programación subyacente a los frameworks debería ser un dato en principio irrelevante a la hora de elegir cuál de ellos usar&lt;/strong&gt;. Mucho más importante es, en cambio, la naturaleza del proyecto que debemos afrontar, por ejemplo: ¿se trata de una nueva aplicación que hay que desarrollar íntegramente, hay que trabajar con grandes bases de datos, es principalmente una app interactiva, es un web service o sólo hay que mejorar una interfaz con problemas de rendimiento?&lt;/p&gt;

&lt;p&gt;Una vez respondidas ese tipo de preguntas y realizada la primera criba de frameworks, nos hemos de enfrentar al hecho de que &lt;strong&gt;existen montones de alternativas ¡incluso sin salirnos de un mismo lenguaje de programación!&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A modo de referencia rápida, estos son algunos de los frameworks más conocidos a día de hoy, clasificados según el lenguaje de programación o la tecnología subyacente. Ni mucho menos se trata de una lista exhaustiva:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;PHP frameworks:&lt;br /&gt;
  &lt;strong&gt;Zend&lt;/strong&gt;, &lt;strong&gt;CodeIgniter&lt;/strong&gt;, &lt;strong&gt;CakePHP&lt;/strong&gt;, &lt;strong&gt;Laravel&lt;/strong&gt; y Lumen (micro), &lt;strong&gt;Nette&lt;/strong&gt;, &lt;strong&gt;Yii&lt;/strong&gt;, Slim (micro), Kohana, Typo3 Flow, FuelPHP…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Python frameworks:&lt;br /&gt; 
  &lt;strong&gt;Django&lt;/strong&gt;, CherryPy, TurboGears, Flask (micro), Pyramid, Bottle (micro)…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JavaScript UI/client-side/web components frameworks/libraries/others:&lt;br /&gt; 
  &lt;strong&gt;AngularJS&lt;/strong&gt;, &lt;strong&gt;jQuery&lt;/strong&gt; (lib), MooTools, KnockoutJS,  ReactJS, Dojo Toolkit (lib), Underscore.js (lib), Prototype, Spry Framework, AuraJS (components wrapper), X-Tag (components dev), Polymer (components dev), Handlebars (templating)…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JavaScript/CoffeeScript/Node.JS frameworks:&lt;br /&gt; 
  &lt;strong&gt;Express&lt;/strong&gt;, &lt;strong&gt;BackboneJS&lt;/strong&gt;, &lt;strong&gt;Ember.js&lt;/strong&gt;, Meteor, Sails.js, Koa, Flatiron, Batman.js, Total.js, SpineJS, Hapi, DerbyJS…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java/Groovy/Scala frameworks:&lt;br /&gt; 
  &lt;strong&gt;Spring Framework&lt;/strong&gt;, &lt;strong&gt;Stripes&lt;/strong&gt;, &lt;strong&gt;Struts&lt;/strong&gt;, &lt;strong&gt;Play&lt;/strong&gt;, &lt;strong&gt;Tapestry&lt;/strong&gt;, &lt;strong&gt;Grails&lt;/strong&gt;, Wicket, Vaadin, DropWizard (micro)…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Perl frameworks:&lt;br /&gt; 
  &lt;strong&gt;Catalyst&lt;/strong&gt;, Dancer, Mojolicious…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ruby frameworks:&lt;br /&gt;
  &lt;strong&gt;Ruby on Rails&lt;/strong&gt;, Sinatra, Cramp, Padrino, Ramaze (micro), Cuba (micro), Camping (micro)…&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No hay que olvidar tampoco los frameworks tipo “propietario” como Adobe ColdFusion o Microsoft ASP.NET, o rarezas como  Seaside escrito en Smalltalk.&lt;/p&gt;

&lt;p&gt;Otras tecnologías que merecen mención son los UI frameworks basados en Java como &lt;strong&gt;JavaServer Faces&lt;/strong&gt; (JSF) y PrimeFaces, &lt;strong&gt;Google Web Toolkit&lt;/strong&gt; (GWT), o curiosidades como &lt;strong&gt;Babel&lt;/strong&gt;, un “traductor” o trans-compiler (de ES6 a ES5) para poder usar versiones punteras de JavaScript en proyectos no tan futuristas.&lt;/p&gt;

&lt;p&gt;A mi modo de ver, en ausencia de condicionantes externos &lt;strong&gt;el mejor criterio para decantarse por el uso de uno u otro framework es la popularidad presente y futura&lt;/strong&gt; de la herramienta. En primer lugar, porque en un mundo tan competitivo como el del desarrollo web, la popularidad suele correlacionarse con la utilidad/calidad. Y en segundo lugar porque a mayor popularidad se sigue que habrá una mayor comunidad de desarrolladores, mejor documentación, más ayuda a la hora de solventar problemas y mayor cantidad de plugins.&lt;/p&gt;

&lt;p&gt;Por eso me ha parecido una buena idea realizar una comparativa de los frameworks, librerías y herramientas de desarrollo de aplicaciones, en lo que respecta a la popularidad y su tendencia en el tiempo. Y teniendo en cuenta que todo el mundillo de los web frameworks se mueve a través de internet: ¿qué mejor herramienta para valorar su popularidad que Google Trends?&lt;/p&gt;

&lt;h2 id=&quot;popularidad-de-los-frameworks-según-google-trends&quot;&gt;Popularidad de los frameworks según Google Trends&lt;/h2&gt;

&lt;h3 id=&quot;interpretando-los-gráficos&quot;&gt;Interpretando los gráficos&lt;/h3&gt;

&lt;p&gt;Antes de bombardearte con gráficos creo que es conveniente recordar que Google Trends compara de forma relativa la búsqueda de términos o temas, lo que significa que los ejes verticales de los gráficos son una escala 0% a 100% y no un número de búsquedas determinado. Esto tiene la ventaja de que podemos comparar el interés entre las diferentes entradas de un mismo gráfico, pero no tendría ningún sentido comparar entradas entre dos gráficos distintos.&lt;/p&gt;

&lt;p&gt;Otro dato a tener en cuenta es que Google Trends no asocia con precisión las búsquedas de palabras con los diferente temas que representan, o dicho con un ejemplo: herramientas con nombres “comunes” como &lt;em&gt;Django&lt;/em&gt;, &lt;em&gt;Cuba&lt;/em&gt; o &lt;em&gt;Express&lt;/em&gt;, que además de software son una película, un país o un adjetivo, arrojan resultados “contaminados”, mucho menos fiables que los de herramientas con nombres “únicos” como &lt;em&gt;Laravel&lt;/em&gt; o &lt;em&gt;AngularJS&lt;/em&gt;. En la medida de lo posible he tratado de “depurar” los resultados para hacerlos comparables agregando o excluyendo términos de búsqueda.&lt;/p&gt;

&lt;p&gt;En cualquier caso, no olvides que es tan importante la popularidad relativa entre herramientas como la &lt;strong&gt;tendencia&lt;/strong&gt; que sigue esa popularidad, lo que nos permite identificar nuevas herramientas que están ganando terreno a otras más viejas y que están cayendo en desuso.&lt;/p&gt;

&lt;h3 id=&quot;comparativas-google-trends&quot;&gt;Comparativas &lt;a href=&quot;https://www.google.com/trends/explore&quot;&gt;Google Trends&lt;/a&gt;:&lt;/h3&gt;

&lt;h4 id=&quot;php-frameworks&quot;&gt;PHP frameworks&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcphp.png&quot; alt=&quot;PHP frameworks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=/m/0jwy148,+/m/04n23m7,+/m/02qgdkj,+/m/0cdvjh,+/m/09t3sp&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En una encuesta realizada en Marzo del año pasado (ver &lt;a href=&quot;http://www.sitepoint.com/best-php-framework-2015-sitepoint-survey-results/&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;) Laravel se situaba a la cabeza de los frameworks PHP más usados, seguido de Nette, Yii (1 y 2), CodeIgniter, Zend (1 y 2) y CakePHP. Este gráfico parece confirmar los datos de la encuesta, pero además nos ofrece una perspectiva temporal interesantísima:&lt;/p&gt;

&lt;p&gt;Laravel, en tan sólo tres años, se ha hecho con el liderazgo de los frameworks PHP y, no sólo eso, sino que todo ellos parecen estar perdiendo popularidad al mismo tiempo que Laravel la gana. En cuestiones de frameworks PHP, por tanto, apostar por &lt;strong&gt;Laravel&lt;/strong&gt; sería la apuesta más segura.&lt;/p&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=/m/0jwy148,+/m/04n23m7,+/m/02qgdkj,+/m/0cdvjh,+/m/09t3sp&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=/m/0jwy148,+/m/04n23m7,+/m/02qgdkj,+/m/0cdvjh,+/m/09t3sp&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;h4 id=&quot;python-frameworks&quot;&gt;Python frameworks&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcpython.png&quot; alt=&quot;Python frameworks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=Django+framework,+Pyramid+framework,+Flask+framework,+Bottle+framework&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En el mundillo python, en cambio, no parece haber tanta competencia por los primeros puestos de liderazgo entre los frameworks full-stack. Sí que podríamos dudar entre qué microframework elegir, aunque Flask parece ir a la cabeza, pero a la hora de desarrolar apps hechas y derechas sólo deberíamos tener un nombre en mente: &lt;strong&gt;Django&lt;/strong&gt;.&lt;/p&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=Django+framework,+Pyramid+framework,+Flask+framework,+Bottle+framework&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=Django+framework,+Pyramid+framework,+Flask+framework,+Bottle+framework&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;h4 id=&quot;javascript-client-side-frameworkslibraries&quot;&gt;JavaScript client-side frameworks/libraries&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcJSfront.png&quot; alt=&quot;JavaScript client-side frameworks/libraries&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=/m/0j45p7w,+/m/0268gyp,+/m/0fs46gx,+/m/0bj6c0,+/m/0g3gd1&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Del lado cliente tengo la sensación de que durante muchos años se han venido haciendo las cosas de la misma manera: escribir código JavaScript y utilizar jQuery para agilizar el trabajo y hacerlo compatible con la mayoría de browsers.&lt;/p&gt;

&lt;p&gt;jQuery sigue siendo la tecnología JavaScript más usada como soporte al desarrollo del front end, pero eso está empezando a cambiar: desde dentro del propio mundillo JavaScript podemos apreciar como AngularJS y la filosofía framework empiezan a hacer mella en el liderazgo de la famosa librería.&lt;/p&gt;

&lt;p&gt;Aunque no se aprecia en este gráfico, es sensato suponer que el declive de jQuery también tiene mucho que ver con la reciente aparición de nuevas tecnologías para desarrollo de UI basados en Java o la incipiente amenaza de las tecnologías basadas en el desarrollo de Web Components.&lt;/p&gt;

&lt;p&gt;Es difícil saber qué ocurrirá en el mundillo estrictamente front end, pero una cosa está clara: jQuery tiene los años de liderazgo contados. Como apuesta de futuro yo me quedo con &lt;strong&gt;AngularJS&lt;/strong&gt; y recomiendo seguir de cerca a tecnologías como ReactJS, sin perder de vista al resto de librerías.&lt;/p&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=/m/0j45p7w,+/m/0268gyp,+/m/0fs46gx,+/m/0bj6c0,+/m/0g3gd1&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=/m/0j45p7w,+/m/0268gyp,+/m/0fs46gx,+/m/0bj6c0,+/m/0g3gd1&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;h4 id=&quot;javascriptcoffeescriptserver-side-js-frameworks&quot;&gt;Javascript/CoffeeScript/server-side JS frameworks&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcJS.png&quot; alt=&quot;Javascript/CoffeeScript/server-side JS frameworks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=backboneJS,+EmberJS,+Express+Node.JS,+MeteorJS,+SailsJS&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hace unos años no me hubiese podido creer que JavaScript sería la base para tecnologías del lado servidor como mínimo tan buenas como cualquier otra. Habría sido inimaginable leer posts como &lt;a href=&quot;http://www.nearform.com/nodecrunch/node-js-becoming-go-technology-enterprise/&quot; target=&quot;_blank&quot;&gt;éste&lt;/a&gt; en los que se habla de Node.JS (un JS runtime environment, una plataforma de ejecución de código JS del lado servidor) como la gran panacea del desarrollo web.&lt;/p&gt;

&lt;p&gt;A primar vista la gráfica sugiere que en este relativamente nuevo mundillo de los full-stack frameworks basados en tecnologías JavaScript/Node.JS parece haber una competencia feroz por hacerse con el primer puesto.&lt;/p&gt;

&lt;p&gt;A estas alturas es difícil mojarse y apostar por algún framework en concreto, pero una cosa está clara: casi todos ellos afirman tener rendimientos increíblemente mejores con respecto a tecnologías más tradicionales como PHP.&lt;/p&gt;

&lt;p&gt;En este sentido no es que haya que estar pendientes de Backbone o Ember o Meteor… Es que &lt;strong&gt;hay que estar pendientes de todo este nicho tecnológico&lt;/strong&gt; porque podrían revolucionar el futuro inmediato y desbancar al resto de tecnologías.&lt;/p&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=backboneJS,+EmberJS,+Express+Node.JS,+MeteorJS,+SailsJS&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=backboneJS,+EmberJS,+Express+Node.JS,+MeteorJS,+SailsJS&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;h4 id=&quot;ruby-frameworks&quot;&gt;Ruby frameworks&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcruby.png&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=/m/0505cl,+/m/05zt0xc,+Cramp+ruby,+Padrino+ruby,+Ramaze&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Con el mundillo Ruby ocurre algo muy parecido a con Python. No hay pelea, no hay color, hay un ganador, sólo un ganador y nada más que un ganador, así que lo único que podemos analizar es la propia tendencia en la popularidad del líder indiscutible: &lt;strong&gt;Ruby on Rails&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Nacimiento y boom del 2005 al 2008, declive hasta el 2010 y maduración hasta ahora. RoR tiene ya más de 10 años pero se conserva bastante bien: no se aprecia un tendencia a la baja especialmente fuerte, aunque nada auspicia un aumento de su popularidad en los próximos años.&lt;/p&gt;

&lt;p&gt;Como teoría de la conspiración: ¿no es casualidad que la etapa de decadencia 2008-2010 coincida con el crecimiento en popularidad de los nuevos frameworks basados en PHP en la misma etapa? &lt;em&gt;*musiquilla de X-Files*&lt;/em&gt;.&lt;/p&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=/m/0505cl,+/m/05zt0xc,+Cramp+ruby,+Padrino+ruby,+Ramaze&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=/m/0505cl,+/m/05zt0xc,+Cramp+ruby,+Padrino+ruby,+Ramaze&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;h4 id=&quot;javagroovyscala-frameworks&quot;&gt;Java/Groovy/Scala frameworks&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcjava.png&quot; alt=&quot;Java/Groovy/Scala frameworks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=/m/0dhx5b,+/m/027lgcc,+/m/02bcj2,+/m/0dj45_,+/m/06hr64&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creo que esta gráfica, donde se aprecia caída generalizada en la popularidad de los frameworks basados en Java, podría inducir a extraer conclusiones precipitadas y erróneas. El mundillo del desarrollo web en Java está fuertemente influenciado por el desarrollo de apps para móviles y teniendo en cuenta que el desarrollo para dispositivos portátiles no hace más que crecer, lo más sensato es suponer que los web frameworks basados en Java o intermediarios entre Java y tecnologías más próximas a las tradicionales tienen aún mucha pelea que dar.&lt;/p&gt;

&lt;p&gt;Yo creo que lo más prudente será estar al tanto respecto a las novedades en esta categoría.&lt;/p&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=/m/0dhx5b,+/m/027lgcc,+/m/02bcj2,+/m/0dj45_,+/m/06hr64&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=/m/0dhx5b,+/m/027lgcc,+/m/02bcj2,+/m/0dj45_,+/m/06hr64&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;h4 id=&quot;full-stack-web-frameworks-cross-tech&quot;&gt;Full-stack web frameworks cross-tech&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://mitxelmoriana.com/images/fcALL.png&quot; alt=&quot;Full-stack web frameworks cross-tech&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_0&amp;amp;export=5&amp;amp;w=640&amp;amp;h=330&amp;amp;q=/m/0jwy148,+/m/06y_qx,+Node.js,+/m/0505cl,+/m/0dhx5b&quot; target=&quot;_blank&quot;&gt;Haz click aquí para ver el gráfico interactivo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No sería decente despedirme sin una comparativa entre los líderes full-stack de cada una de las categorías anteriores. He de confesar que he hecho un poquito de trampa a la hora de añadir en la comparativa a Node.JS en lugar de a algún framework basado en JavaScript o que corra sobre Node.JS, pero creo que Node.JS, como tecnología subyacente, puede ser un buen indicador de vanguardia sobre la evolución futura de frameworks basados en server-side JS.&lt;/p&gt;

&lt;p&gt;Creo que de acuerdo a la gráfica podríamos agrupar a los líderes en dos tipos de tendencias: los que se mantienen en popularidad o presentan una ligera tendencia a la baja y los que tienden a crecer de forma lineal, más o menos estable, durante los últimos años.&lt;/p&gt;

&lt;p&gt;En resumen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Apuestas de futuro: Laravel y frameworks basados en JavaScript&lt;/li&gt;
  &lt;li&gt;Apuestas seguras: Django, RoR y Spring.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=/m/0jwy148,+/m/06y_qx,+Express.js,+/m/0505cl,+/m/0dhx5b&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=/m/0jwy148,+/m/06y_qx,+Express.js,+/m/0505cl,+/m/0dhx5b&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

&lt;!--#### Front-end tools cross-tech--&gt;

&lt;!--![Front-end tools cross-tech](http://mitxelmoriana.com/images/fcfrontALL.png)--&gt;

&lt;!--[Haz click aquí para ver el gráfico interactivo][graph-8]{:target=&quot;_blank&quot;}--&gt;

&lt;!--&lt;iframe scrolling=&quot;no&quot; style=&quot;border:none;&quot; width=&quot;640&quot; height=&quot;330&quot; src=&quot;http://www.google.com/trends/fetchComponent?hl=en-US&amp;cmpt=q&amp;content=1&amp;cid=TIMESERIES_GRAPH_0&amp;export=5&amp;w=640&amp;h=330&amp;q=/m/026mhl,+/m/0d6jq1,+/m/0268gyp,+/m/0j45p7w,+web+components&quot;&gt;&lt;/iframe&gt;--&gt;
&lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;//www.google.es/trends/embed.js?hl=es&amp;q=/m/026mhl,+/m/0d6jq1,+/m/0268gyp,+/m/0j45p7w,+web+components&amp;cmpt=q&amp;tz=Etc/GMT-1&amp;tz=Etc/GMT-1&amp;content=1&amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;export=5&amp;w=500&amp;h=330&quot;&gt;&lt;/script&gt;--&gt;

</description>
        <pubDate>Wed, 03 Feb 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/web/2016/02/03/la-invasion-de-los-frameworks-tendencias-en-tecnologias-de-desarrollo-de-web-apps.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/web/2016/02/03/la-invasion-de-los-frameworks-tendencias-en-tecnologias-de-desarrollo-de-web-apps.html</guid>
        
        <category>web</category>
        
        <category>technologies,</category>
        
        <category>web</category>
        
        <category>app,</category>
        
        <category>web,</category>
        
        <category>web</category>
        
        <category>programming,</category>
        
        <category>app</category>
        
        <category>programming,</category>
        
        <category>programming,</category>
        
        <category>trends</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>Bash script: fastcommit</title>
        <description>&lt;p&gt;Dejo por aquí un bash script para hacer con Git el stage de todos los cambios que hayan en el espacio de trabajo, commit con el mensaje que queramos y push a master branch, todo de una vez. Yo lo uso para ahorrarme escribir los mismos comandos una y otra vez en pequeños proyectos (los catalanes somos así de agarraos).&lt;/p&gt;

&lt;p&gt;Lo de agregarle la comprobación de que se han pasado el número de argumentos correctos y la pijadilla de los colores es algo que he visto en otros scripts y he copiado descaradamente.&lt;/p&gt;

&lt;h2 id=&quot;cómo-funciona&quot;&gt;¿Cómo funciona?&lt;/h2&gt;

&lt;p&gt;Copia el código y guárdalo en un nuevo fichero llamado (por ejemplo) &lt;strong&gt;fastcommit&lt;/strong&gt;. Pon el fichero, con permisos de ejecución, en la carpeta raíz de tu proyeto con git. A continuación escribe:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./fastcommit &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mensaje_para_el_commit&amp;quot;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# Sólo admite un (1) argumento&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;el-script&quot;&gt;El script&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##########################################################&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Stage all, commit and push to master&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##########################################################&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Exit on error&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;\033[01;31m&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;\033[01;34m&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;\033[01;32m&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;\033[00m&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;EXPECTED_ARGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;E_BADARGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;65
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;-ne &lt;span class=&quot;nv&quot;&gt;$EXPECTED_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\nUsage: $0 \&amp;quot;Commit message\&amp;quot;\n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$E_BADARGS&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\n${blue}- Staging all changes within the working space${norm}\n${blue}- Commit with the message ${red}${1}${norm}\n${blue}- Pushing to origin, master branch\n${norm}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt; git add -A &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;${blue}Stage ---&amp;gt; [${green}OK${blue}]${norm}&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;${blue}Stage ---&amp;gt; [${red}BAD${blue}]${norm}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;${1}&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;${blue}Commit ---&amp;gt; [${green}OK${blue}]${norm}&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;${blue}Commit ---&amp;gt; [${red}BAD${blue}]${norm}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; git push origin master &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;${blue}Push ---&amp;gt; [${green}OK${blue}]${norm}&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;${blue}Push ---&amp;gt; [${red}BAD${blue}]${norm}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;aviso-probablemente-innecesario&quot;&gt;Aviso probablemente innecesario&lt;/h2&gt;

&lt;p&gt;No me hago responsable de los daños causados por el uso de este script, incluyendo, aunque no de forma exclusiva: que no funcione, que te explote el PC, que haga algo que no te guste, que te perjudique algún fichero, que te abduzcan los extraterrestres, que invoque a un espíritu del averno o que te deje tu pareja.&lt;/p&gt;

&lt;p&gt;Como norma general, no ejecutes nada sin saber previamente lo que hace. Aún menos si te lo pide alguien por internet.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Jan 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/bash/2016/01/25/bash-script-para-hacer-git-add-commit-y-push-rapidamente.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/bash/2016/01/25/bash-script-para-hacer-git-add-commit-y-push-rapidamente.html</guid>
        
        <category>bash</category>
        
        <category>script,</category>
        
        <category>git,</category>
        
        <category>github,</category>
        
        <category>bitbucket,</category>
        
        <category>VCS,</category>
        
        <category>programming,</category>
        
        <category>git</category>
        
        <category>commit,</category>
        
        <category>git</category>
        
        <category>push,</category>
        
        <category>git</category>
        
        <category>add,</category>
        
        <category>commit,</category>
        
        <category>push,</category>
        
        <category>add</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Estrategias de desarrollo web</title>
        <description>&lt;h2 id=&quot;breve-introducción&quot;&gt;Breve introducción&lt;/h2&gt;

&lt;p&gt;Cualquier desarrollador web estará de acuerdo conmigo en que elegir la tecnología apropiada a la magnitud, complejidad y características de cada proyecto es de una importancia difícil de sobrevalorar. Además, es lo primero que debe hacerse  incluso antes de comenzar a trabajar en un proyecto. Por eso, he decidido estrenar mi blog comenzando por el principio, es decir, hablando sobre estrategias de desarrollo web.&lt;/p&gt;

&lt;h2 id=&quot;wordpress-cms-y-todo-lo-demás&quot;&gt;WordPress, CMS y todo lo demás&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://wordpress.org/&quot; target=&quot;_blank&quot;&gt;WordPress&lt;/a&gt;&lt;/strong&gt;, gracias a su enorme comunidad de desarrolladores de plugins, es muy útil para crear blogs y páginas web con docenas de funcionalidades. Si además le instalas &lt;strong&gt;&lt;a href=&quot;https://www.woothemes.com/woocommerce/&quot; target=&quot;_blank&quot;&gt;WooCommerce&lt;/a&gt;&lt;/strong&gt; o plugins similares también puedes hacer tiendas on-line más que decentes. En mi opinión, la versatilidad y sencillez de Wordpress y de otros CMS por el estilo, deja poco espacio para cualquier otra plataforma de desarrollo web salvo en algunos casos puntuales:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Desarrollo de webservices&lt;/li&gt;
  &lt;li&gt;Desarrollo de aplicaciones web o aplicaciones híbridas a medida&lt;/li&gt;
  &lt;li&gt;Desarrollo de pequeñas webs, landing pages o incluso blogs con contenido principalmente estático&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webservices-y-apps-para-usos-específicos&quot;&gt;Webservices y apps para usos específicos&lt;/h2&gt;

&lt;p&gt;Si, por ejemplo, uno desea desarrollar un webservice o una app social, un nuevo facebook, una nueva wikipedia o incluso un nuevo WordPress, donde el back end (lo que no se ve) nos va a llevar muchas semanas de desarrollo, lo más apropiado es utilizar un &lt;strong&gt;framework&lt;/strong&gt;, cuya raison d’être es, precisamente, ayudarnos a escribir el menor número de líneas de código posible, en el menor tiempo posible, para realizar todas las tareas necesarias (consultas a base de datos, validación de datos, servir páginas, enviar correos…).&lt;/p&gt;

&lt;p&gt;En estos casos yo recomiendo utilizar cualquiera de los frameworks más populares basados en cualquiera de los lenguajes de programación que uno domine, por ejemplo: &lt;strong&gt;&lt;a href=&quot;https://laravel.com/&quot; target=&quot;_blank&quot;&gt;Laravel&lt;/a&gt;&lt;/strong&gt; si uno está familiarizado con PHP o &lt;strong&gt;&lt;a href=&quot;http://www.rubyonrails.org.es/&quot; target=&quot;_blank&quot;&gt;Ruby on Rails&lt;/a&gt;&lt;/strong&gt; (aka RoR) si uno maneja Ruby.&lt;/p&gt;

&lt;p&gt;Aunque yo soy un fan confeso de Laravel, cualquier framework es una buena opción si consta de una comunidad de desarrolladores lo suficientemente grande como para permitirnos encontrar fácilmente tanto plugins adicionales como respuesta a problemas que nos puedan ir surgiendo.&lt;/p&gt;

&lt;h2 id=&quot;blogs-webs-corporativas&quot;&gt;Blogs, webs corporativas…&lt;/h2&gt;

&lt;p&gt;Si, por otro lado, uno desea hacerse un blog personal o una pequeña página corporativa o, en general, cualquier web con contenido principalmente estático, a mi parecer, tiene tres opciones:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;La primera opción es usar &lt;strong&gt;WordPress&lt;/strong&gt;, &lt;strong&gt;Magento&lt;/strong&gt;, &lt;strong&gt;Drupal&lt;/strong&gt; o cualquier otro CMS popular, con los que podremos customizar las plantillas y editar nuevos contenidos a una velocidad muy razonable. Por contra, los contenidos se servirán bastante lentamente en relación al poco peso que en realidad tienen y el CMS en sí probablemente consumirá muchos más recursos del servidor de los estrictamente necesarios, lo cual hay que tener en cuenta si nuestro cliente o nosotros mismos pagamos un hosting a razón de los servicios que ofrece (PHP, SQL) o los recursos que consume (tráfico de datos, CPU, RAM, disco duro).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La segunda opción, óptima para webs-anuncios, landing pages o pequeñas webs corporativas con 2-5 páginas distintas, es sencillamente personalizar algún template html/css/js existente. Al respecto, los templates basados en &lt;strong&gt;&lt;a href=&quot;http://getbootstrap.com/&quot; target=&quot;_blank&quot;&gt;Bootstrap&lt;/a&gt;&lt;/strong&gt; y similares son ideales: fáciles de entender, responsive…&lt;/p&gt;

    &lt;p&gt;El desarrollo de proyectos bajo este enfoque tan sólo nos debería llevar 1-2 jornadas de trabajo, incluyendo la optimización de la velocidad de carga y el SEO básico. El resultado debería ser una web extremadamente optimizada y que consumirá los recursos estrictamente necesarios.&lt;/p&gt;

    &lt;p&gt;La única pega de este enfoque es que agregar una nueva página no supondrá ningún ahorro de tiempo respecto a la anterior. Por tanto, si hubiese que hacer muchas páginas o si quisiéramos ciertas funcionalidades complejas (de blog, de e-shop…), esta opción seguramente no sería la más eficiente a medio plazo.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La tercera y última opción es utilizar &lt;strong&gt;&lt;a href=&quot;https://jekyllrb.com/&quot; target=&quot;_blank&quot;&gt;Jekyll&lt;/a&gt;&lt;/strong&gt; o algún otro generador de sitios estáticos similar, a los que sólo hay que pasarles el contenido de cada página convenientemente estructurado (por ejemplo, con markdown). Estas aplicaciones generan y actualizan, incluso en tiempo real, la totalidad de nuestro sitio web conforme uno lo escribe en cualquier editor de texto o IDE favorito.&lt;/p&gt;

    &lt;p&gt;Los sitios así generados no requieren del propio generador para ser servidos, con lo cual en nuestro entorno de producción no es necesario tener bases de datos, ni Ruby, PHP o Node… lo que implica un consumo de recursos mínimo, con el consiguiente ahorro en tiempos de configuración, problemas y dinerito.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;en-resumen&quot;&gt;En resumen&lt;/h2&gt;

&lt;p&gt;Sin olvidar las respectivas ventajas/desventajas comentadas más arriba la cosa quedaría tal que así:&lt;/p&gt;

&lt;table class=&quot;table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Type of project vs Technology&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Framework&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;CMS&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Static site generator&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Template&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Simple static content&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Standard site&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Custom app&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Estoy seguro de que me dejo en el tintero un montón de tecnologías aplicable a tipologías de proyectos muy variadas. A bote pronto me vienen a la mente la gran cantidad de CMS que existen para montar portales, e-shops o blogs y que no he mencionado o los múltiples frameworks basados en Python, Javascript o Java, para realizar aplicaciones de todo tipo. ¡Te animo a que me sugieras todas las tecnologías que tú conoces y consideres excepcionalmente buenas!&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Jan 2016 00:00:00 +0100</pubDate>
        <link>http://mitxelmoriana.com/web/2016/01/02/estrategias-de-desarrollo-web.html</link>
        <guid isPermaLink="true">http://mitxelmoriana.com/web/2016/01/02/estrategias-de-desarrollo-web.html</guid>
        
        <category>web,</category>
        
        <category>web</category>
        
        <category>development,</category>
        
        <category>web</category>
        
        <category>development</category>
        
        <category>strategies</category>
        
        
        <category>web</category>
        
      </item>
    
  </channel>
</rss>
